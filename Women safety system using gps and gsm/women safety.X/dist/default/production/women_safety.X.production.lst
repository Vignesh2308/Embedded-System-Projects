

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jan 17 15:28:34 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127                           
   128                           	psect	idataBANK0
   129  04C9                     __pidataBANK0:	
   130                           
   131                           ;initializer for _phone_number3
   132  04C9  3439               	retlw	57
   133  04CA  3436               	retlw	54
   134  04CB  3430               	retlw	48
   135  04CC  3430               	retlw	48
   136  04CD  3430               	retlw	48
   137  04CE  3438               	retlw	56
   138  04CF  3432               	retlw	50
   139  04D0  3433               	retlw	51
   140  04D1  3434               	retlw	52
   141  04D2  3432               	retlw	50
   142  04D3  3400               	retlw	0
   143  04D4  3400               	retlw	0
   144  04D5  3400               	retlw	0
   145  04D6  3400               	retlw	0
   146  04D7  3400               	retlw	0
   147  04D8  3400               	retlw	0
   148  04D9  3400               	retlw	0
   149  04DA  3400               	retlw	0
   150  04DB  3400               	retlw	0
   151  04DC  3400               	retlw	0
   152                           
   153                           ;initializer for _phone_number2
   154  04DD  3437               	retlw	55
   155  04DE  3438               	retlw	56
   156  04DF  3437               	retlw	55
   157  04E0  3431               	retlw	49
   158  04E1  3430               	retlw	48
   159  04E2  3433               	retlw	51
   160  04E3  3434               	retlw	52
   161  04E4  3435               	retlw	53
   162  04E5  3432               	retlw	50
   163  04E6  3431               	retlw	49
   164  04E7  3400               	retlw	0
   165  04E8  3400               	retlw	0
   166  04E9  3400               	retlw	0
   167  04EA  3400               	retlw	0
   168  04EB  3400               	retlw	0
   169  04EC  3400               	retlw	0
   170  04ED  3400               	retlw	0
   171  04EE  3400               	retlw	0
   172  04EF  3400               	retlw	0
   173  04F0  3400               	retlw	0
   174                           
   175                           ;initializer for _phone_number1
   176  04F1  3437               	retlw	55
   177  04F2  3433               	retlw	51
   178  04F3  3433               	retlw	51
   179  04F4  3438               	retlw	56
   180  04F5  3439               	retlw	57
   181  04F6  3439               	retlw	57
   182  04F7  3430               	retlw	48
   183  04F8  3439               	retlw	57
   184  04F9  3438               	retlw	56
   185  04FA  3439               	retlw	57
   186  04FB  3400               	retlw	0
   187  04FC  3400               	retlw	0
   188  04FD  3400               	retlw	0
   189  04FE  3400               	retlw	0
   190  04FF  3400               	retlw	0
   191  0500  3400               	retlw	0
   192  0501  3400               	retlw	0
   193  0502  3400               	retlw	0
   194  0503  3400               	retlw	0
   195  0504  3400               	retlw	0
   196  0019                     _TXREG	set	25
   197  0035                     _RB5	set	53
   198  0034                     _RB4	set	52
   199  00C6                     _RX9	set	198
   200  00C4                     _CREN	set	196
   201  00C7                     _SPEN	set	199
   202  0043                     _RD3	set	67
   203  0042                     _RD2	set	66
   204  0047                     _RD7	set	71
   205  0046                     _RD6	set	70
   206  0045                     _RD5	set	69
   207  0044                     _RD4	set	68
   208  0086                     _TRISBbits	set	134
   209  0088                     _TRISD	set	136
   210  0098                     _TXSTA	set	152
   211  0099                     _SPBRG	set	153
   212  04C6                     _TX9	set	1222
   213  04C5                     _TXEN	set	1221
   214  04C4                     _SYNC	set	1220
   215  04C2                     _BRGH	set	1218
   216  043F                     _TRISC7	set	1087
   217  043E                     _TRISC6	set	1086
   218                           
   219                           	psect	strings
   220  0003                     __pstrings:	
   221  0003                     stringtab:	
   222  0003                     __stringtab:	
   223                           
   224                           ;	String table - string pointers are 2 bytes each
   225  0003  1BFF               	btfsc	btemp+1,7
   226  0004  280D               	ljmp	stringcode
   227  0005  1383               	bcf	3,7
   228  0006  187F               	btfsc	btemp+1,0
   229  0007  1783               	bsf	3,7
   230  0008  0800               	movf	0,w
   231  0009  0A84               	incf	4,f
   232  000A  1903               	skipnz
   233  000B  0AFF               	incf	btemp+1,f
   234  000C  0008               	return
   235  000D                     stringcode:	
   236  000D  087F               	movf	btemp+1,w
   237  000E  397F               	andlw	127
   238  000F  008A               	movwf	10
   239  0010  0804               	movf	4,w
   240  0011  0A84               	incf	4,f
   241  0012  1903               	skipnz
   242  0013  0AFF               	incf	btemp+1,f
   243  0014  0082               	movwf	2
   244  0015                     __stringbase:	
   245  0015                     __end_of__stringtab:	
   246                           
   247                           	psect	stringtext
   248  0800                     __pstringtext:	
   249  0800                     STR_15:	
   250  0800  3445               	retlw	69	;'E'
   251  0801  344D               	retlw	77	;'M'
   252  0802  3445               	retlw	69	;'E'
   253  0803  3452               	retlw	82	;'R'
   254  0804  3447               	retlw	71	;'G'
   255  0805  3445               	retlw	69	;'E'
   256  0806  344E               	retlw	78	;'N'
   257  0807  3443               	retlw	67	;'C'
   258  0808  3459               	retlw	89	;'Y'
   259  0809  3420               	retlw	32	;' '
   260  080A  3455               	retlw	85	;'U'
   261  080B  3452               	retlw	82	;'R'
   262  080C  3447               	retlw	71	;'G'
   263  080D  3445               	retlw	69	;'E'
   264  080E  344E               	retlw	78	;'N'
   265  080F  3454               	retlw	84	;'T'
   266  0810  340D               	retlw	13
   267  0811  344C               	retlw	76	;'L'
   268  0812  3441               	retlw	65	;'A'
   269  0813  3454               	retlw	84	;'T'
   270  0814  3420               	retlw	32	;' '
   271  0815  343A               	retlw	58	;':'
   272  0816  3420               	retlw	32	;' '
   273  0817  3431               	retlw	49	;'1'
   274  0818  3432               	retlw	50	;'2'
   275  0819  342E               	retlw	46	;'.'
   276  081A  3435               	retlw	53	;'5'
   277  081B  3432               	retlw	50	;'2'
   278  081C  3420               	retlw	32	;' '
   279  081D  344E               	retlw	78	;'N'
   280  081E  340D               	retlw	13
   281  081F  344C               	retlw	76	;'L'
   282  0820  344F               	retlw	79	;'O'
   283  0821  344E               	retlw	78	;'N'
   284  0822  3420               	retlw	32	;' '
   285  0823  343A               	retlw	58	;':'
   286  0824  3420               	retlw	32	;' '
   287  0825  3438               	retlw	56	;'8'
   288  0826  3430               	retlw	48	;'0'
   289  0827  342E               	retlw	46	;'.'
   290  0828  3431               	retlw	49	;'1'
   291  0829  3433               	retlw	51	;'3'
   292  082A  3420               	retlw	32	;' '
   293  082B  3445               	retlw	69	;'E'
   294  082C  3420               	retlw	32	;' '
   295  082D  340D               	retlw	13
   296  082E  340A               	retlw	10
   297  082F  3400               	retlw	0
   298  0830                     STR_2:	
   299  0830  3441               	retlw	65	;'A'
   300  0831  3454               	retlw	84	;'T'
   301  0832  342B               	retlw	43	;'+'
   302  0833  3443               	retlw	67	;'C'
   303  0834  344E               	retlw	78	;'N'
   304  0835  344D               	retlw	77	;'M'
   305  0836  3449               	retlw	73	;'I'
   306  0837  343D               	retlw	61	;'='
   307  0838  3432               	retlw	50	;'2'
   308  0839  342C               	retlw	44	;','
   309  083A  3432               	retlw	50	;'2'
   310  083B  342C               	retlw	44	;','
   311  083C  3430               	retlw	48	;'0'
   312  083D  342C               	retlw	44	;','
   313  083E  3430               	retlw	48	;'0'
   314  083F  342C               	retlw	44	;','
   315  0840  3430               	retlw	48	;'0'
   316  0841  3400               	retlw	0
   317  0842                     STR_8:	
   318  0842  3420               	retlw	32	;' '
   319  0843  3420               	retlw	32	;' '
   320  0844  3420               	retlw	32	;' '
   321  0845  3420               	retlw	32	;' '
   322  0846  3420               	retlw	32	;' '
   323  0847  3420               	retlw	32	;' '
   324  0848  3420               	retlw	32	;' '
   325  0849  3420               	retlw	32	;' '
   326  084A  3420               	retlw	32	;' '
   327  084B  3420               	retlw	32	;' '
   328  084C  3420               	retlw	32	;' '
   329  084D  3420               	retlw	32	;' '
   330  084E  3420               	retlw	32	;' '
   331  084F  3420               	retlw	32	;' '
   332  0850  3420               	retlw	32	;' '
   333  0851  3420               	retlw	32	;' '
   334  0852  3400               	retlw	0
   335  0853                     STR_18:	
   336  0853  3420               	retlw	32	;' '
   337  0854  3420               	retlw	32	;' '
   338  0855  3420               	retlw	32	;' '
   339  0856  3420               	retlw	32	;' '
   340  0857  3420               	retlw	32	;' '
   341  0858  3448               	retlw	72	;'H'
   342  0859  3445               	retlw	69	;'E'
   343  085A  344C               	retlw	76	;'L'
   344  085B  3450               	retlw	80	;'P'
   345  085C  3420               	retlw	32	;' '
   346  085D  3421               	retlw	33	;'!'
   347  085E  3421               	retlw	33	;'!'
   348  085F  3421               	retlw	33	;'!'
   349  0860  3420               	retlw	32	;' '
   350  0861  3420               	retlw	32	;' '
   351  0862  3420               	retlw	32	;' '
   352  0863  3400               	retlw	0
   353  0864                     STR_9:	
   354  0864  3420               	retlw	32	;' '
   355  0865  3447               	retlw	71	;'G'
   356  0866  3465               	retlw	101	;'e'
   357  0867  3474               	retlw	116	;'t'
   358  0868  3474               	retlw	116	;'t'
   359  0869  3469               	retlw	105	;'i'
   360  086A  346E               	retlw	110	;'n'
   361  086B  3467               	retlw	103	;'g'
   362  086C  3420               	retlw	32	;' '
   363  086D  3447               	retlw	71	;'G'
   364  086E  3450               	retlw	80	;'P'
   365  086F  3453               	retlw	83	;'S'
   366  0870  342E               	retlw	46	;'.'
   367  0871  3420               	retlw	32	;' '
   368  0872  3420               	retlw	32	;' '
   369  0873  3420               	retlw	32	;' '
   370  0874  3400               	retlw	0
   371  0875                     STR_10:	
   372  0875  3420               	retlw	32	;' '
   373  0876  3447               	retlw	71	;'G'
   374  0877  3465               	retlw	101	;'e'
   375  0878  3474               	retlw	116	;'t'
   376  0879  3474               	retlw	116	;'t'
   377  087A  3469               	retlw	105	;'i'
   378  087B  346E               	retlw	110	;'n'
   379  087C  3467               	retlw	103	;'g'
   380  087D  3420               	retlw	32	;' '
   381  087E  3447               	retlw	71	;'G'
   382  087F  3450               	retlw	80	;'P'
   383  0880  3453               	retlw	83	;'S'
   384  0881  342E               	retlw	46	;'.'
   385  0882  342E               	retlw	46	;'.'
   386  0883  3420               	retlw	32	;' '
   387  0884  3420               	retlw	32	;' '
   388  0885  3400               	retlw	0
   389  0886                     STR_6:	
   390  0886  3420               	retlw	32	;' '
   391  0887  3420               	retlw	32	;' '
   392  0888  3441               	retlw	65	;'A'
   393  0889  346C               	retlw	108	;'l'
   394  088A  3465               	retlw	101	;'e'
   395  088B  3472               	retlw	114	;'r'
   396  088C  3474               	retlw	116	;'t'
   397  088D  3420               	retlw	32	;' '
   398  088E  3473               	retlw	115	;'s'
   399  088F  3479               	retlw	121	;'y'
   400  0890  3473               	retlw	115	;'s'
   401  0891  3474               	retlw	116	;'t'
   402  0892  3465               	retlw	101	;'e'
   403  0893  346D               	retlw	109	;'m'
   404  0894  3420               	retlw	32	;' '
   405  0895  3420               	retlw	32	;' '
   406  0896  3400               	retlw	0
   407  0897                     STR_5:	
   408  0897  3420               	retlw	32	;' '
   409  0898  3420               	retlw	32	;' '
   410  0899  3457               	retlw	87	;'W'
   411  089A  346F               	retlw	111	;'o'
   412  089B  346D               	retlw	109	;'m'
   413  089C  3465               	retlw	101	;'e'
   414  089D  346E               	retlw	110	;'n'
   415  089E  3420               	retlw	32	;' '
   416  089F  3473               	retlw	115	;'s'
   417  08A0  3461               	retlw	97	;'a'
   418  08A1  3466               	retlw	102	;'f'
   419  08A2  3465               	retlw	101	;'e'
   420  08A3  3474               	retlw	116	;'t'
   421  08A4  3479               	retlw	121	;'y'
   422  08A5  3420               	retlw	32	;' '
   423  08A6  3420               	retlw	32	;' '
   424  08A7  3400               	retlw	0
   425  08A8                     STR_11:	
   426  08A8  3420               	retlw	32	;' '
   427  08A9  3447               	retlw	71	;'G'
   428  08AA  3465               	retlw	101	;'e'
   429  08AB  3474               	retlw	116	;'t'
   430  08AC  3474               	retlw	116	;'t'
   431  08AD  3469               	retlw	105	;'i'
   432  08AE  346E               	retlw	110	;'n'
   433  08AF  3467               	retlw	103	;'g'
   434  08B0  3420               	retlw	32	;' '
   435  08B1  3447               	retlw	71	;'G'
   436  08B2  3450               	retlw	80	;'P'
   437  08B3  3453               	retlw	83	;'S'
   438  08B4  342E               	retlw	46	;'.'
   439  08B5  342E               	retlw	46	;'.'
   440  08B6  342E               	retlw	46	;'.'
   441  08B7  3420               	retlw	32	;' '
   442  08B8  3400               	retlw	0
   443  08B9                     STR_7:	
   444  08B9  3420               	retlw	32	;' '
   445  08BA  3420               	retlw	32	;' '
   446  08BB  344D               	retlw	77	;'M'
   447  08BC  3465               	retlw	101	;'e'
   448  08BD  3473               	retlw	115	;'s'
   449  08BE  3473               	retlw	115	;'s'
   450  08BF  3461               	retlw	97	;'a'
   451  08C0  3467               	retlw	103	;'g'
   452  08C1  3465               	retlw	101	;'e'
   453  08C2  3420               	retlw	32	;' '
   454  08C3  3473               	retlw	115	;'s'
   455  08C4  3465               	retlw	101	;'e'
   456  08C5  3474               	retlw	116	;'t'
   457  08C6  3475               	retlw	117	;'u'
   458  08C7  3470               	retlw	112	;'p'
   459  08C8  3420               	retlw	32	;' '
   460  08C9  3400               	retlw	0
   461  08CA                     STR_14:	
   462  08CA  344C               	retlw	76	;'L'
   463  08CB  344F               	retlw	79	;'O'
   464  08CC  344E               	retlw	78	;'N'
   465  08CD  3420               	retlw	32	;' '
   466  08CE  343A               	retlw	58	;':'
   467  08CF  3420               	retlw	32	;' '
   468  08D0  3438               	retlw	56	;'8'
   469  08D1  3430               	retlw	48	;'0'
   470  08D2  342E               	retlw	46	;'.'
   471  08D3  3431               	retlw	49	;'1'
   472  08D4  3433               	retlw	51	;'3'
   473  08D5  3420               	retlw	32	;' '
   474  08D6  3445               	retlw	69	;'E'
   475  08D7  3420               	retlw	32	;' '
   476  08D8  3420               	retlw	32	;' '
   477  08D9  3400               	retlw	0
   478  08DA                     STR_13:	
   479  08DA  344C               	retlw	76	;'L'
   480  08DB  3441               	retlw	65	;'A'
   481  08DC  3454               	retlw	84	;'T'
   482  08DD  3420               	retlw	32	;' '
   483  08DE  343A               	retlw	58	;':'
   484  08DF  3420               	retlw	32	;' '
   485  08E0  3431               	retlw	49	;'1'
   486  08E1  3432               	retlw	50	;'2'
   487  08E2  342E               	retlw	46	;'.'
   488  08E3  3435               	retlw	53	;'5'
   489  08E4  3432               	retlw	50	;'2'
   490  08E5  3420               	retlw	32	;' '
   491  08E6  344E               	retlw	78	;'N'
   492  08E7  3420               	retlw	32	;' '
   493  08E8  3420               	retlw	32	;' '
   494  08E9  3400               	retlw	0
   495  08EA                     STR_3:	
   496  08EA  3441               	retlw	65	;'A'
   497  08EB  3454               	retlw	84	;'T'
   498  08EC  342B               	retlw	43	;'+'
   499  08ED  3443               	retlw	67	;'C'
   500  08EE  344D               	retlw	77	;'M'
   501  08EF  3447               	retlw	71	;'G'
   502  08F0  3453               	retlw	83	;'S'
   503  08F1  343D               	retlw	61	;'='
   504  08F2  3422               	retlw	34	;'"'
   505  08F3  3400               	retlw	0
   506  08F4                     STR_1:	
   507  08F4  3441               	retlw	65	;'A'
   508  08F5  3454               	retlw	84	;'T'
   509  08F6  342B               	retlw	43	;'+'
   510  08F7  3443               	retlw	67	;'C'
   511  08F8  344D               	retlw	77	;'M'
   512  08F9  3447               	retlw	71	;'G'
   513  08FA  3446               	retlw	70	;'F'
   514  08FB  343D               	retlw	61	;'='
   515  08FC  3431               	retlw	49	;'1'
   516  08FD  3400               	retlw	0
   517  0800                     
   518                           ; #config settings
   519  0000                     
   520                           	psect	cinit
   521  07E6                     start_initialization:	
   522  07E6                     __initialization:	
   523                           
   524                           ; Initialize objects allocated to BANK0
   525  07E6  1383               	bcf	3,7	;select IRP bank0
   526  07E7  305C               	movlw	low (__pdataBANK0+60)
   527  07E8  00FD               	movwf	btemp+-1
   528  07E9  3004               	movlw	high __pidataBANK0
   529  07EA  00FE               	movwf	btemp
   530  07EB  30C9               	movlw	low __pidataBANK0
   531  07EC  00FF               	movwf	btemp+1
   532  07ED  3020               	movlw	low __pdataBANK0
   533  07EE  0084               	movwf	4
   534  07EF  120A  118A  23C6  120A  118A  	fcall	init_ram0
   535                           
   536                           ; Clear objects allocated to BANK1
   537  07F4  30A0               	movlw	low __pbssBANK1
   538  07F5  0084               	movwf	4
   539  07F6  30D2               	movlw	low (__pbssBANK1+50)
   540  07F7  120A  118A  23A5   	fcall	clear_ram0
   541                           
   542                           ; Clear objects allocated to BANK0
   543  07FA  01DF               	clrf	__pbssBANK0& (0+127)
   544  07FB  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   545  07FC                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548  07FC                     __end_of__initialization:	
   549  07FC  0183               	clrf	3
   550  07FD  120A  118A  2E25   	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssBANK0
   553  005F                     __pbssBANK0:	
   554  005F                     _index:	
   555  005F                     	ds	2
   556                           
   557                           	psect	dataBANK0
   558  0020                     __pdataBANK0:	
   559  0020                     _phone_number3:	
   560  0020                     	ds	20
   561  0034                     _phone_number2:	
   562  0034                     	ds	20
   563  0048                     _phone_number1:	
   564  0048                     	ds	20
   565                           
   566                           	psect	bssBANK1
   567  00A0                     __pbssBANK1:	
   568  00A0                     _message_buffer:	
   569  00A0                     	ds	50
   570                           
   571                           	psect	inittext
   572  03C2                     init_fetch0:	
   573                           ;	Called with low address in FSR and high address in W
   574                           
   575  03C2  087E               	movf	126,w
   576  03C3  008A               	movwf	10
   577  03C4  087F               	movf	127,w
   578  03C5  0082               	movwf	2
   579  03C6                     init_ram0:	
   580                           ;Called with:
   581                           ;	high address of idata address in btemp 
   582                           ;	low address of idata address in btemp+1 
   583                           ;	low address of data in FSR
   584                           ;	high address + 1 of data in btemp-1
   585                           
   586  03C6  23C2  120A  118A   	fcall	init_fetch0
   587  03C9  0080               	movwf	0
   588  03CA  0A84               	incf	4,f
   589  03CB  0804               	movf	4,w
   590  03CC  067D               	xorwf	125,w
   591  03CD  1903               	btfsc	3,2
   592  03CE  3400               	retlw	0
   593  03CF  0AFF               	incf	127,f
   594  03D0  1903               	btfsc	3,2
   595  03D1  0AFE               	incf	126,f
   596  03D2  2BC6               	goto	init_ram0
   597                           
   598                           	psect	clrtext
   599  03A5                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603  03A5  0064               	clrwdt	;clear the watchdog before getting into this loop
   604  03A6                     clrloop0:	
   605  03A6  0180               	clrf	0	;clear RAM location pointed to by FSR
   606  03A7  0A84               	incf	4,f	;increment pointer
   607  03A8  0604               	xorwf	4,w	;XOR with final address
   608  03A9  1903               	btfsc	3,2	;have we reached the end yet?
   609  03AA  3400               	retlw	0	;all done for this memory range, return
   610  03AB  0604               	xorwf	4,w	;XOR again to restore value
   611  03AC  2BA6               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:	
   615  0070                     ?_Lcd_Port:	
   616  0070                     ??_Lcd_Port:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Cmd:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Write_Char:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_UART_Init:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_UART_Init:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Serial_write:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_Serial_write:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_Setup_messaging:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Start_message:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Send_message:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_Lcd_Clear:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     Lcd_Port@a:	
   656                           ; 2 bytes @ 0x0
   657                           
   658  0070                     Serial_write@data:	
   659                           ; 1 bytes @ 0x0
   660                           
   661                           
   662                           ; 1 bytes @ 0x0
   663  0070                     	ds	1
   664  0071                     ??_Lcd_Cmd:	
   665  0071                     ??_Lcd_Write_Char:	
   666                           ; 1 bytes @ 0x1
   667                           
   668  0071                     ?_Serial_print:	
   669                           ; 1 bytes @ 0x1
   670                           
   671  0071                     ??_Send_message:	
   672                           ; 1 bytes @ 0x1
   673                           
   674  0071                     Serial_print@buffer:	
   675                           ; 1 bytes @ 0x1
   676                           
   677                           
   678                           ; 2 bytes @ 0x1
   679  0071                     	ds	1
   680  0072                     Lcd_Write_Char@temp:	
   681                           
   682                           ; 1 bytes @ 0x2
   683  0072                     	ds	1
   684  0073                     ??_Serial_print:	
   685  0073                     Lcd_Cmd@a:	
   686                           ; 1 bytes @ 0x3
   687                           
   688  0073                     Lcd_Write_Char@y:	
   689                           ; 1 bytes @ 0x3
   690                           
   691                           
   692                           ; 1 bytes @ 0x3
   693  0073                     	ds	1
   694  0074                     ??_Lcd_Clear:	
   695  0074                     ?_Lcd_Set_Cursor:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ??_Lcd_Init:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     Lcd_Set_Cursor@b:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     Lcd_Write_Char@a:	
   705                           ; 1 bytes @ 0x4
   706                           
   707                           
   708                           ; 1 bytes @ 0x4
   709  0074                     	ds	1
   710  0075                     ??_Lcd_Set_Cursor:	
   711  0075                     ?_Lcd_Write_String:	
   712                           ; 1 bytes @ 0x5
   713                           
   714  0075                     Lcd_Write_String@a:	
   715                           ; 1 bytes @ 0x5
   716                           
   717                           
   718                           ; 2 bytes @ 0x5
   719  0075                     	ds	1
   720  0076                     Serial_print@i:	
   721                           
   722                           ; 2 bytes @ 0x6
   723  0076                     	ds	1
   724  0077                     ??_Lcd_Write_String:	
   725  0077                     Lcd_Set_Cursor@a:	
   726                           ; 1 bytes @ 0x7
   727                           
   728                           
   729                           ; 1 bytes @ 0x7
   730  0077                     	ds	1
   731  0078                     ?_Serial_println:	
   732  0078                     ??_Start_message:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0078                     ?_Type_message_content:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0078                     Lcd_Set_Cursor@z:	
   739                           ; 1 bytes @ 0x8
   740                           
   741  0078                     Serial_println@buffer:	
   742                           ; 1 bytes @ 0x8
   743                           
   744  0078                     Type_message_content@Content:	
   745                           ; 2 bytes @ 0x8
   746                           
   747                           
   748                           ; 2 bytes @ 0x8
   749  0078                     	ds	1
   750  0079                     Lcd_Set_Cursor@y:	
   751                           
   752                           ; 1 bytes @ 0x9
   753  0079                     	ds	1
   754  007A                     ??_Serial_println:	
   755  007A                     ??_Setup_messaging:	
   756                           ; 1 bytes @ 0xA
   757                           
   758  007A                     ??_Type_message_content:	
   759                           ; 1 bytes @ 0xA
   760                           
   761  007A                     Lcd_Set_Cursor@temp:	
   762                           ; 1 bytes @ 0xA
   763                           
   764  007A                     Lcd_Write_String@i:	
   765                           ; 1 bytes @ 0xA
   766                           
   767                           
   768                           ; 2 bytes @ 0xA
   769  007A                     	ds	1
   770  007B                     Start_message@phone_number:	
   771                           
   772                           ; 1 bytes @ 0xB
   773  007B                     	ds	2
   774                           
   775                           	psect	cstackBANK0
   776  005C                     __pcstackBANK0:	
   777  005C                     ??_main:	
   778                           
   779                           ; 1 bytes @ 0x0
   780  005C                     	ds	3
   781                           
   782                           	psect	maintext
   783  0625                     __pmaintext:	
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 100 in file "Safety main sathyabama.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : B00/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       3       0       0       0
   806 ;;      Totals:         0       3       0       0       0
   807 ;;Total ram usage:        3 bytes
   808 ;; Hardware stack levels required when called:    4
   809 ;; This function calls:
   810 ;;		_Lcd_Clear
   811 ;;		_Lcd_Init
   812 ;;		_Lcd_Set_Cursor
   813 ;;		_Lcd_Write_String
   814 ;;		_Send_message
   815 ;;		_Setup_messaging
   816 ;;		_Start_message
   817 ;;		_Type_message_content
   818 ;;		_UART_Init
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _main
   826  0625                     _main:	
   827                           
   828                           ;Safety main sathyabama.c: 102: TRISD = 0x00;
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   832  0625  1683               	bsf	3,5	;RP0=1, select bank1
   833  0626  1303               	bcf	3,6	;RP1=0, select bank1
   834  0627  0188               	clrf	8	;volatile
   835                           
   836                           ;Safety main sathyabama.c: 103: TRISBbits.TRISB4 = 0;
   837  0628  1206               	bcf	6,4	;volatile
   838                           
   839                           ;Safety main sathyabama.c: 104: TRISBbits.TRISB5 = 1;
   840  0629  1686               	bsf	6,5	;volatile
   841                           
   842                           ;Safety main sathyabama.c: 105: Lcd_Init();
   843  062A  120A  118A  25C9  120A  118A  	fcall	_Lcd_Init
   844                           
   845                           ;Safety main sathyabama.c: 106: UART_Init();
   846  062F  120A  118A  23E7  120A  118A  	fcall	_UART_Init
   847                           
   848                           ;Safety main sathyabama.c: 107: Lcd_Clear();
   849  0634  120A  118A  23B7  120A  118A  	fcall	_Lcd_Clear
   850                           
   851                           ;Safety main sathyabama.c: 108: Lcd_Set_Cursor(1,1);
   852  0639  01F4               	clrf	Lcd_Set_Cursor@b
   853  063A  0AF4               	incf	Lcd_Set_Cursor@b,f
   854  063B  3001               	movlw	1
   855  063C  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   856                           
   857                           ;Safety main sathyabama.c: 109: Lcd_Write_String("  Women safety  ");
   858  0641  3097               	movlw	low (STR_5| (0+32768))
   859  0642  00F5               	movwf	Lcd_Write_String@a
   860  0643  3088               	movlw	high (STR_5| (0+32768))
   861  0644  00F6               	movwf	Lcd_Write_String@a+1
   862  0645  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   863                           
   864                           ;Safety main sathyabama.c: 110: Lcd_Set_Cursor(2,1);
   865  064A  01F4               	clrf	Lcd_Set_Cursor@b
   866  064B  0AF4               	incf	Lcd_Set_Cursor@b,f
   867  064C  3002               	movlw	2
   868  064D  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   869                           
   870                           ;Safety main sathyabama.c: 111: Lcd_Write_String("  Alert system  ");
   871  0652  3086               	movlw	low (STR_6| (0+32768))
   872  0653  00F5               	movwf	Lcd_Write_String@a
   873  0654  3088               	movlw	high (STR_6| (0+32768))
   874  0655  00F6               	movwf	Lcd_Write_String@a+1
   875  0656  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   876                           
   877                           ;Safety main sathyabama.c: 112: _delay((unsigned long)((1000)*(20000000/4000.0)));
   878  065B  301A               	movlw	26
   879  065C  1283               	bcf	3,5	;RP0=0, select bank0
   880  065D  1303               	bcf	3,6	;RP1=0, select bank0
   881  065E  00DE               	movwf	??_main+2
   882  065F  305E               	movlw	94
   883  0660  00DD               	movwf	??_main+1
   884  0661  306D               	movlw	109
   885  0662  00DC               	movwf	??_main
   886  0663                     u297:	
   887  0663  0BDC               	decfsz	??_main,f
   888  0664  2E63               	goto	u297
   889  0665  0BDD               	decfsz	??_main+1,f
   890  0666  2E63               	goto	u297
   891  0667  0BDE               	decfsz	??_main+2,f
   892  0668  2E63               	goto	u297
   893  0669  2E6A               	nop2
   894                           
   895                           ;Safety main sathyabama.c: 113: Lcd_Set_Cursor(1,1);
   896  066A  01F4               	clrf	Lcd_Set_Cursor@b
   897  066B  0AF4               	incf	Lcd_Set_Cursor@b,f
   898  066C  3001               	movlw	1
   899  066D  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   900                           
   901                           ;Safety main sathyabama.c: 114: Lcd_Write_String("  Message setup ");
   902  0672  30B9               	movlw	low (STR_7| (0+32768))
   903  0673  00F5               	movwf	Lcd_Write_String@a
   904  0674  3088               	movlw	high (STR_7| (0+32768))
   905  0675  00F6               	movwf	Lcd_Write_String@a+1
   906  0676  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   907                           
   908                           ;Safety main sathyabama.c: 115: Lcd_Set_Cursor(2,1);
   909  067B  01F4               	clrf	Lcd_Set_Cursor@b
   910  067C  0AF4               	incf	Lcd_Set_Cursor@b,f
   911  067D  3002               	movlw	2
   912  067E  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   913                           
   914                           ;Safety main sathyabama.c: 116: Lcd_Write_String("                ");
   915  0683  3042               	movlw	low (STR_8| (0+32768))
   916  0684  00F5               	movwf	Lcd_Write_String@a
   917  0685  3088               	movlw	high (STR_8| (0+32768))
   918  0686  00F6               	movwf	Lcd_Write_String@a+1
   919  0687  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   920                           
   921                           ;Safety main sathyabama.c: 117: Setup_messaging();
   922  068C  120A  118A  2433  120A  118A  	fcall	_Setup_messaging
   923                           
   924                           ;Safety main sathyabama.c: 118: Lcd_Clear();
   925  0691  120A  118A  23B7  120A  118A  	fcall	_Lcd_Clear
   926                           
   927                           ;Safety main sathyabama.c: 119: RB4 = 0;
   928  0696  1283               	bcf	3,5	;RP0=0, select bank0
   929  0697  1303               	bcf	3,6	;RP1=0, select bank0
   930  0698  1206               	bcf	6,4	;volatile
   931  0699                     l916:	
   932                           ;Safety main sathyabama.c: 120: while(1)
   933                           
   934                           
   935                           ;Safety main sathyabama.c: 121: { RB4 = 0;
   936  0699  1283               	bcf	3,5	;RP0=0, select bank0
   937  069A  1303               	bcf	3,6	;RP1=0, select bank0
   938  069B  1206               	bcf	6,4	;volatile
   939                           
   940                           ;Safety main sathyabama.c: 122: if(!RB5)
   941  069C  1A86               	btfsc	6,5	;volatile
   942  069D  2E99               	goto	l916
   943                           
   944                           ;Safety main sathyabama.c: 123: {
   945                           ;Safety main sathyabama.c: 124: Lcd_Set_Cursor(1,1);
   946  069E  01F4               	clrf	Lcd_Set_Cursor@b
   947  069F  0AF4               	incf	Lcd_Set_Cursor@b,f
   948  06A0  3001               	movlw	1
   949  06A1  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   950                           
   951                           ;Safety main sathyabama.c: 125: Lcd_Write_String(" Getting GPS.   ");
   952  06A6  3064               	movlw	low (STR_9| (0+32768))
   953  06A7  00F5               	movwf	Lcd_Write_String@a
   954  06A8  3088               	movlw	high (STR_9| (0+32768))
   955  06A9  00F6               	movwf	Lcd_Write_String@a+1
   956  06AA  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   957                           
   958                           ;Safety main sathyabama.c: 126: _delay((unsigned long)((500)*(20000000/4000.0)));
   959  06AF  300D               	movlw	13
   960  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   961  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   962  06B2  00DE               	movwf	??_main+2
   963  06B3  30AF               	movlw	175
   964  06B4  00DD               	movwf	??_main+1
   965  06B5  30B5               	movlw	181
   966  06B6  00DC               	movwf	??_main
   967  06B7                     u307:	
   968  06B7  0BDC               	decfsz	??_main,f
   969  06B8  2EB7               	goto	u307
   970  06B9  0BDD               	decfsz	??_main+1,f
   971  06BA  2EB7               	goto	u307
   972  06BB  0BDE               	decfsz	??_main+2,f
   973  06BC  2EB7               	goto	u307
   974  06BD  2EBE               	nop2
   975                           
   976                           ;Safety main sathyabama.c: 127: Lcd_Set_Cursor(1,1);
   977  06BE  01F4               	clrf	Lcd_Set_Cursor@b
   978  06BF  0AF4               	incf	Lcd_Set_Cursor@b,f
   979  06C0  3001               	movlw	1
   980  06C1  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
   981                           
   982                           ;Safety main sathyabama.c: 128: Lcd_Write_String(" Getting GPS..  ");
   983  06C6  3075               	movlw	low (STR_10| (0+32768))
   984  06C7  00F5               	movwf	Lcd_Write_String@a
   985  06C8  3088               	movlw	high (STR_10| (0+32768))
   986  06C9  00F6               	movwf	Lcd_Write_String@a+1
   987  06CA  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
   988                           
   989                           ;Safety main sathyabama.c: 129: _delay((unsigned long)((500)*(20000000/4000.0)));
   990  06CF  300D               	movlw	13
   991  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   992  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   993  06D2  00DE               	movwf	??_main+2
   994  06D3  30AF               	movlw	175
   995  06D4  00DD               	movwf	??_main+1
   996  06D5  30B5               	movlw	181
   997  06D6  00DC               	movwf	??_main
   998  06D7                     u317:	
   999  06D7  0BDC               	decfsz	??_main,f
  1000  06D8  2ED7               	goto	u317
  1001  06D9  0BDD               	decfsz	??_main+1,f
  1002  06DA  2ED7               	goto	u317
  1003  06DB  0BDE               	decfsz	??_main+2,f
  1004  06DC  2ED7               	goto	u317
  1005  06DD  2EDE               	nop2
  1006                           
  1007                           ;Safety main sathyabama.c: 130: Lcd_Set_Cursor(1,1);
  1008  06DE  01F4               	clrf	Lcd_Set_Cursor@b
  1009  06DF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1010  06E0  3001               	movlw	1
  1011  06E1  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1012                           
  1013                           ;Safety main sathyabama.c: 131: Lcd_Write_String(" Getting GPS... ");
  1014  06E6  30A8               	movlw	low (STR_11| (0+32768))
  1015  06E7  00F5               	movwf	Lcd_Write_String@a
  1016  06E8  3088               	movlw	high (STR_11| (0+32768))
  1017  06E9  00F6               	movwf	Lcd_Write_String@a+1
  1018  06EA  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1019                           
  1020                           ;Safety main sathyabama.c: 132: Lcd_Set_Cursor(2,1);
  1021  06EF  01F4               	clrf	Lcd_Set_Cursor@b
  1022  06F0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1023  06F1  3002               	movlw	2
  1024  06F2  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1025                           
  1026                           ;Safety main sathyabama.c: 133: Lcd_Write_String("                ");
  1027  06F7  3042               	movlw	low (STR_8| (0+32768))
  1028  06F8  00F5               	movwf	Lcd_Write_String@a
  1029  06F9  3088               	movlw	high (STR_8| (0+32768))
  1030  06FA  00F6               	movwf	Lcd_Write_String@a+1
  1031  06FB  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1032                           
  1033                           ;Safety main sathyabama.c: 134: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1034  0700  301A               	movlw	26
  1035  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0703  00DE               	movwf	??_main+2
  1038  0704  305E               	movlw	94
  1039  0705  00DD               	movwf	??_main+1
  1040  0706  306D               	movlw	109
  1041  0707  00DC               	movwf	??_main
  1042  0708                     u327:	
  1043  0708  0BDC               	decfsz	??_main,f
  1044  0709  2F08               	goto	u327
  1045  070A  0BDD               	decfsz	??_main+1,f
  1046  070B  2F08               	goto	u327
  1047  070C  0BDE               	decfsz	??_main+2,f
  1048  070D  2F08               	goto	u327
  1049  070E  2F0F               	nop2
  1050                           
  1051                           ;Safety main sathyabama.c: 135: Lcd_Set_Cursor(1,1);
  1052  070F  01F4               	clrf	Lcd_Set_Cursor@b
  1053  0710  0AF4               	incf	Lcd_Set_Cursor@b,f
  1054  0711  3001               	movlw	1
  1055  0712  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1056                           
  1057                           ;Safety main sathyabama.c: 136: Lcd_Write_String("LAT : 12.52 N  ");
  1058  0717  30DA               	movlw	low (STR_13| (0+32768))
  1059  0718  00F5               	movwf	Lcd_Write_String@a
  1060  0719  3088               	movlw	high (STR_13| (0+32768))
  1061  071A  00F6               	movwf	Lcd_Write_String@a+1
  1062  071B  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1063                           
  1064                           ;Safety main sathyabama.c: 137: Lcd_Set_Cursor(2,1);
  1065  0720  01F4               	clrf	Lcd_Set_Cursor@b
  1066  0721  0AF4               	incf	Lcd_Set_Cursor@b,f
  1067  0722  3002               	movlw	2
  1068  0723  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1069                           
  1070                           ;Safety main sathyabama.c: 138: Lcd_Write_String("LON : 80.13 E  ");
  1071  0728  30CA               	movlw	low (STR_14| (0+32768))
  1072  0729  00F5               	movwf	Lcd_Write_String@a
  1073  072A  3088               	movlw	high (STR_14| (0+32768))
  1074  072B  00F6               	movwf	Lcd_Write_String@a+1
  1075  072C  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1076                           
  1077                           ;Safety main sathyabama.c: 139: Start_message(phone_number1);
  1078  0731  3048               	movlw	(low (_phone_number1| 0))& (0+255)
  1079  0732  120A  118A  2460  120A  118A  	fcall	_Start_message
  1080                           
  1081                           ;Safety main sathyabama.c: 140: Type_message_content("EMERGENCY URGENT\rLAT : 12.52 N\rL
      +                          ON : 80.13 E \r\n");
  1082  0737  3000               	movlw	low (STR_15| (0+32768))
  1083  0738  00F8               	movwf	Type_message_content@Content
  1084  0739  3088               	movlw	high (STR_15| (0+32768))
  1085  073A  00F9               	movwf	Type_message_content@Content+1
  1086  073B  120A  118A  239D  120A  118A  	fcall	_Type_message_content
  1087                           
  1088                           ;Safety main sathyabama.c: 141: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1089  0740  301A               	movlw	26
  1090  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0743  00DE               	movwf	??_main+2
  1093  0744  305E               	movlw	94
  1094  0745  00DD               	movwf	??_main+1
  1095  0746  306D               	movlw	109
  1096  0747  00DC               	movwf	??_main
  1097  0748                     u337:	
  1098  0748  0BDC               	decfsz	??_main,f
  1099  0749  2F48               	goto	u337
  1100  074A  0BDD               	decfsz	??_main+1,f
  1101  074B  2F48               	goto	u337
  1102  074C  0BDE               	decfsz	??_main+2,f
  1103  074D  2F48               	goto	u337
  1104  074E  2F4F               	nop2
  1105                           
  1106                           ;Safety main sathyabama.c: 142: Send_message();
  1107  074F  120A  118A  2398  120A  118A  	fcall	_Send_message
  1108                           
  1109                           ;Safety main sathyabama.c: 143: Start_message(phone_number2);
  1110  0754  3034               	movlw	(low (_phone_number2| 0))& (0+255)
  1111  0755  120A  118A  2460  120A  118A  	fcall	_Start_message
  1112                           
  1113                           ;Safety main sathyabama.c: 144: Type_message_content("EMERGENCY URGENT\rLAT : 12.52 N\rL
      +                          ON : 80.13 E \r\n");
  1114  075A  3000               	movlw	low (STR_15| (0+32768))
  1115  075B  00F8               	movwf	Type_message_content@Content
  1116  075C  3088               	movlw	high (STR_15| (0+32768))
  1117  075D  00F9               	movwf	Type_message_content@Content+1
  1118  075E  120A  118A  239D  120A  118A  	fcall	_Type_message_content
  1119                           
  1120                           ;Safety main sathyabama.c: 145: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1121  0763  301A               	movlw	26
  1122  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0766  00DE               	movwf	??_main+2
  1125  0767  305E               	movlw	94
  1126  0768  00DD               	movwf	??_main+1
  1127  0769  306D               	movlw	109
  1128  076A  00DC               	movwf	??_main
  1129  076B                     u347:	
  1130  076B  0BDC               	decfsz	??_main,f
  1131  076C  2F6B               	goto	u347
  1132  076D  0BDD               	decfsz	??_main+1,f
  1133  076E  2F6B               	goto	u347
  1134  076F  0BDE               	decfsz	??_main+2,f
  1135  0770  2F6B               	goto	u347
  1136  0771  2F72               	nop2
  1137                           
  1138                           ;Safety main sathyabama.c: 146: Send_message();
  1139  0772  120A  118A  2398  120A  118A  	fcall	_Send_message
  1140                           
  1141                           ;Safety main sathyabama.c: 147: Start_message(phone_number3);
  1142  0777  3020               	movlw	(low (_phone_number3| 0))& (0+255)
  1143  0778  120A  118A  2460  120A  118A  	fcall	_Start_message
  1144                           
  1145                           ;Safety main sathyabama.c: 148: Type_message_content("EMERGENCY URGENT\rLAT : 12.52 N\rL
      +                          ON : 80.13 E \r\n");
  1146  077D  3000               	movlw	low (STR_15| (0+32768))
  1147  077E  00F8               	movwf	Type_message_content@Content
  1148  077F  3088               	movlw	high (STR_15| (0+32768))
  1149  0780  00F9               	movwf	Type_message_content@Content+1
  1150  0781  120A  118A  239D  120A  118A  	fcall	_Type_message_content
  1151                           
  1152                           ;Safety main sathyabama.c: 149: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1153  0786  301A               	movlw	26
  1154  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0789  00DE               	movwf	??_main+2
  1157  078A  305E               	movlw	94
  1158  078B  00DD               	movwf	??_main+1
  1159  078C  306D               	movlw	109
  1160  078D  00DC               	movwf	??_main
  1161  078E                     u357:	
  1162  078E  0BDC               	decfsz	??_main,f
  1163  078F  2F8E               	goto	u357
  1164  0790  0BDD               	decfsz	??_main+1,f
  1165  0791  2F8E               	goto	u357
  1166  0792  0BDE               	decfsz	??_main+2,f
  1167  0793  2F8E               	goto	u357
  1168  0794  2F95               	nop2
  1169                           
  1170                           ;Safety main sathyabama.c: 150: Send_message();
  1171  0795  120A  118A  2398  120A  118A  	fcall	_Send_message
  1172                           
  1173                           ;Safety main sathyabama.c: 151: Lcd_Clear();
  1174  079A  120A  118A  23B7  120A  118A  	fcall	_Lcd_Clear
  1175                           
  1176                           ;Safety main sathyabama.c: 152: Lcd_Set_Cursor(1,1);
  1177  079F  01F4               	clrf	Lcd_Set_Cursor@b
  1178  07A0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1179  07A1  3001               	movlw	1
  1180  07A2  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1181                           
  1182                           ;Safety main sathyabama.c: 153: Lcd_Write_String("     HELP !!!   ");
  1183  07A7  3053               	movlw	low (STR_18| (0+32768))
  1184  07A8  00F5               	movwf	Lcd_Write_String@a
  1185  07A9  3088               	movlw	high (STR_18| (0+32768))
  1186  07AA  00F6               	movwf	Lcd_Write_String@a+1
  1187  07AB  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1188                           
  1189                           ;Safety main sathyabama.c: 154: Lcd_Set_Cursor(2,1);
  1190  07B0  01F4               	clrf	Lcd_Set_Cursor@b
  1191  07B1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1192  07B2  3002               	movlw	2
  1193  07B3  120A  118A  257F  120A  118A  	fcall	_Lcd_Set_Cursor
  1194                           
  1195                           ;Safety main sathyabama.c: 155: Lcd_Write_String("                ");
  1196  07B8  3042               	movlw	low (STR_8| (0+32768))
  1197  07B9  00F5               	movwf	Lcd_Write_String@a
  1198  07BA  3088               	movlw	high (STR_8| (0+32768))
  1199  07BB  00F6               	movwf	Lcd_Write_String@a+1
  1200  07BC  120A  118A  2505  120A  118A  	fcall	_Lcd_Write_String
  1201                           
  1202                           ;Safety main sathyabama.c: 156: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1203  07C1  3033               	movlw	51
  1204  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1205  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1206  07C4  00DE               	movwf	??_main+2
  1207  07C5  30BB               	movlw	187
  1208  07C6  00DD               	movwf	??_main+1
  1209  07C7  30DF               	movlw	223
  1210  07C8  00DC               	movwf	??_main
  1211  07C9                     u367:	
  1212  07C9  0BDC               	decfsz	??_main,f
  1213  07CA  2FC9               	goto	u367
  1214  07CB  0BDD               	decfsz	??_main+1,f
  1215  07CC  2FC9               	goto	u367
  1216  07CD  0BDE               	decfsz	??_main+2,f
  1217  07CE  2FC9               	goto	u367
  1218                           
  1219                           ;Safety main sathyabama.c: 157: Lcd_Clear();
  1220  07CF  120A  118A  23B7  120A  118A  	fcall	_Lcd_Clear
  1221                           
  1222                           ;Safety main sathyabama.c: 158: RB4 = 1;
  1223  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1224  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1225  07D6  1606               	bsf	6,4	;volatile
  1226                           
  1227                           ;Safety main sathyabama.c: 159: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1228  07D7  3033               	movlw	51
  1229  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1230  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1231  07DA  00DE               	movwf	??_main+2
  1232  07DB  30BB               	movlw	187
  1233  07DC  00DD               	movwf	??_main+1
  1234  07DD  30DF               	movlw	223
  1235  07DE  00DC               	movwf	??_main
  1236  07DF                     u377:	
  1237  07DF  0BDC               	decfsz	??_main,f
  1238  07E0  2FDF               	goto	u377
  1239  07E1  0BDD               	decfsz	??_main+1,f
  1240  07E2  2FDF               	goto	u377
  1241  07E3  0BDE               	decfsz	??_main+2,f
  1242  07E4  2FDF               	goto	u377
  1243  07E5  2E99               	goto	l916
  1244  07E6                     __end_of_main:	
  1245                           
  1246                           	psect	text1
  1247  03E7                     __ptext1:	
  1248 ;; *************** function _UART_Init *****************
  1249 ;; Defined at:
  1250 ;;		line 44 in file "Safety main sathyabama.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _UART_Init
  1279  03E7                     _UART_Init:	
  1280                           
  1281                           ;Safety main sathyabama.c: 46: TRISC6 = 0;
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _UART_Init: [wreg]
  1285  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1286  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  1287  03E9  1307               	bcf	7,6	;volatile
  1288                           
  1289                           ;Safety main sathyabama.c: 47: TRISC7 = 1;
  1290  03EA  1787               	bsf	7,7	;volatile
  1291                           
  1292                           ;Safety main sathyabama.c: 48: SPBRG = ((20000000/16)/9600) - 1;
  1293  03EB  3081               	movlw	129
  1294  03EC  0099               	movwf	25	;volatile
  1295                           
  1296                           ;Safety main sathyabama.c: 49: BRGH = 1;
  1297  03ED  1518               	bsf	24,2	;volatile
  1298                           
  1299                           ;Safety main sathyabama.c: 50: SYNC = 0;
  1300  03EE  1218               	bcf	24,4	;volatile
  1301                           
  1302                           ;Safety main sathyabama.c: 51: SPEN = 1;
  1303  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1304  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1305  03F1  1798               	bsf	24,7	;volatile
  1306                           
  1307                           ;Safety main sathyabama.c: 52: TXEN = 1;
  1308  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1309  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  1310  03F4  1698               	bsf	24,5	;volatile
  1311                           
  1312                           ;Safety main sathyabama.c: 53: CREN = 1;
  1313  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1314  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1315  03F7  1618               	bsf	24,4	;volatile
  1316                           
  1317                           ;Safety main sathyabama.c: 54: TX9 = 0;
  1318  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1319  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1320  03FA  1318               	bcf	24,6	;volatile
  1321                           
  1322                           ;Safety main sathyabama.c: 55: RX9 = 0;
  1323  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1324  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1325  03FD  1318               	bcf	24,6	;volatile
  1326  03FE  0008               	return
  1327  03FF                     __end_of_UART_Init:	
  1328                           
  1329                           	psect	text2
  1330  039D                     __ptext2:	
  1331 ;; *************** function _Type_message_content *****************
  1332 ;; Defined at:
  1333 ;;		line 90 in file "Safety main sathyabama.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  Content         2    8[COMMON] PTR unsigned char 
  1336 ;;		 -> STR_17(48), STR_16(48), STR_15(48), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         2       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		_Serial_print
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _Type_message_content
  1364  039D                     _Type_message_content:	
  1365                           
  1366                           ;Safety main sathyabama.c: 91: Serial_print(Content);
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _Type_message_content: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1370  039D  0878               	movf	Type_message_content@Content,w
  1371  039E  00F1               	movwf	Serial_print@buffer
  1372  039F  0879               	movf	Type_message_content@Content+1,w
  1373  03A0  00F2               	movwf	Serial_print@buffer+1
  1374  03A1  120A  118A  2542   	fcall	_Serial_print
  1375  03A4  0008               	return
  1376  03A5                     __end_of_Type_message_content:	
  1377                           
  1378                           	psect	text3
  1379  0460                     __ptext3:	
  1380 ;; *************** function _Start_message *****************
  1381 ;; Defined at:
  1382 ;;		line 83 in file "Safety main sathyabama.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  phone_number    1    wreg     PTR unsigned char 
  1385 ;;		 -> phone_number3(20), phone_number2(20), phone_number1(20), 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  phone_number    1   11[COMMON] PTR unsigned char 
  1388 ;;		 -> phone_number3(20), phone_number2(20), phone_number1(20), 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         1       0       0       0       0
  1400 ;;      Temps:          3       0       0       0       0
  1401 ;;      Totals:         4       0       0       0       0
  1402 ;;Total ram usage:        4 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    2
  1405 ;; This function calls:
  1406 ;;		_Serial_print
  1407 ;;		_Serial_write
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _Start_message
  1415  0460                     _Start_message:	
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _Start_message: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1419                           ;Start_message@phone_number stored from wreg
  1420  0460  00FB               	movwf	Start_message@phone_number
  1421                           
  1422                           ;Safety main sathyabama.c: 84: Serial_print("AT+CMGS=\"");
  1423  0461  30EA               	movlw	low (STR_3| (0+32768))
  1424  0462  00F1               	movwf	Serial_print@buffer
  1425  0463  3088               	movlw	high (STR_3| (0+32768))
  1426  0464  00F2               	movwf	Serial_print@buffer+1
  1427  0465  120A  118A  2542  120A  118A  	fcall	_Serial_print
  1428                           
  1429                           ;Safety main sathyabama.c: 85: Serial_print(phone_number);
  1430  046A  087B               	movf	Start_message@phone_number,w
  1431  046B  00F1               	movwf	Serial_print@buffer
  1432  046C  3000               	movlw	0
  1433  046D  00F2               	movwf	Serial_print@buffer+1
  1434  046E  120A  118A  2542  120A  118A  	fcall	_Serial_print
  1435                           
  1436                           ;Safety main sathyabama.c: 86: Serial_print("\"");
  1437  0473  30F2               	movlw	low ((STR_3+8)| (0+32768))
  1438  0474  00F1               	movwf	Serial_print@buffer
  1439  0475  3088               	movlw	high ((STR_3+8)| (0+32768))
  1440  0476  00F2               	movwf	Serial_print@buffer+1
  1441  0477  120A  118A  2542  120A  118A  	fcall	_Serial_print
  1442                           
  1443                           ;Safety main sathyabama.c: 87: Serial_write(0x0D);
  1444  047C  300D               	movlw	13
  1445  047D  120A  118A  23AD  120A  118A  	fcall	_Serial_write
  1446                           
  1447                           ;Safety main sathyabama.c: 88: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1448  0482  3033               	movlw	51
  1449  0483  00FA               	movwf	??_Start_message+2
  1450  0484  30BB               	movlw	187
  1451  0485  00F9               	movwf	??_Start_message+1
  1452  0486  30DF               	movlw	223
  1453  0487  00F8               	movwf	??_Start_message
  1454  0488                     u387:	
  1455  0488  0BF8               	decfsz	??_Start_message,f
  1456  0489  2C88               	goto	u387
  1457  048A  0BF9               	decfsz	??_Start_message+1,f
  1458  048B  2C88               	goto	u387
  1459  048C  0BFA               	decfsz	??_Start_message+2,f
  1460  048D  2C88               	goto	u387
  1461  048E  2C8F               	nop2
  1462  048F  0008               	return
  1463  0490                     __end_of_Start_message:	
  1464                           
  1465                           	psect	text4
  1466  0433                     __ptext4:	
  1467 ;; *************** function _Setup_messaging *****************
  1468 ;; Defined at:
  1469 ;;		line 77 in file "Safety main sathyabama.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          3       0       0       0       0
  1486 ;;      Totals:         3       0       0       0       0
  1487 ;;Total ram usage:        3 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    3
  1490 ;; This function calls:
  1491 ;;		_Serial_println
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _Setup_messaging
  1499  0433                     _Setup_messaging:	
  1500                           
  1501                           ;Safety main sathyabama.c: 78: Serial_println("AT+CMGF=1");
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _Setup_messaging: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505  0433  30F4               	movlw	low (STR_1| (0+32768))
  1506  0434  00F8               	movwf	Serial_println@buffer
  1507  0435  3088               	movlw	high (STR_1| (0+32768))
  1508  0436  00F9               	movwf	Serial_println@buffer+1
  1509  0437  120A  118A  23D3  120A  118A  	fcall	_Serial_println
  1510                           
  1511                           ;Safety main sathyabama.c: 79: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1512  043C  3033               	movlw	51
  1513  043D  00FC               	movwf	??_Setup_messaging+2
  1514  043E  30BB               	movlw	187
  1515  043F  00FB               	movwf	??_Setup_messaging+1
  1516  0440  30DF               	movlw	223
  1517  0441  00FA               	movwf	??_Setup_messaging
  1518  0442                     u397:	
  1519  0442  0BFA               	decfsz	??_Setup_messaging,f
  1520  0443  2C42               	goto	u397
  1521  0444  0BFB               	decfsz	??_Setup_messaging+1,f
  1522  0445  2C42               	goto	u397
  1523  0446  0BFC               	decfsz	??_Setup_messaging+2,f
  1524  0447  2C42               	goto	u397
  1525  0448  2C49               	nop2
  1526                           
  1527                           ;Safety main sathyabama.c: 80: Serial_println("AT+CNMI=2,2,0,0,0");
  1528  0449  3030               	movlw	low (STR_2| (0+32768))
  1529  044A  00F8               	movwf	Serial_println@buffer
  1530  044B  3088               	movlw	high (STR_2| (0+32768))
  1531  044C  00F9               	movwf	Serial_println@buffer+1
  1532  044D  120A  118A  23D3  120A  118A  	fcall	_Serial_println
  1533                           
  1534                           ;Safety main sathyabama.c: 81: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1535  0452  3033               	movlw	51
  1536  0453  00FC               	movwf	??_Setup_messaging+2
  1537  0454  30BB               	movlw	187
  1538  0455  00FB               	movwf	??_Setup_messaging+1
  1539  0456  30DF               	movlw	223
  1540  0457  00FA               	movwf	??_Setup_messaging
  1541  0458                     u407:	
  1542  0458  0BFA               	decfsz	??_Setup_messaging,f
  1543  0459  2C58               	goto	u407
  1544  045A  0BFB               	decfsz	??_Setup_messaging+1,f
  1545  045B  2C58               	goto	u407
  1546  045C  0BFC               	decfsz	??_Setup_messaging+2,f
  1547  045D  2C58               	goto	u407
  1548  045E  2C5F               	nop2
  1549  045F  0008               	return
  1550  0460                     __end_of_Setup_messaging:	
  1551                           
  1552                           	psect	text5
  1553  03D3                     __ptext5:	
  1554 ;; *************** function _Serial_println *****************
  1555 ;; Defined at:
  1556 ;;		line 68 in file "Safety main sathyabama.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  buffer          2    8[COMMON] PTR const unsigned char 
  1559 ;;		 -> STR_2(18), STR_1(10), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         2       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0
  1574 ;;      Totals:         2       0       0       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    2
  1578 ;; This function calls:
  1579 ;;		_Serial_print
  1580 ;;		_Serial_write
  1581 ;; This function is called by:
  1582 ;;		_Setup_messaging
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Serial_println
  1588  03D3                     _Serial_println:	
  1589                           
  1590                           ;Safety main sathyabama.c: 69: Serial_print(buffer);
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _Serial_println: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1594  03D3  0878               	movf	Serial_println@buffer,w
  1595  03D4  00F1               	movwf	Serial_print@buffer
  1596  03D5  0879               	movf	Serial_println@buffer+1,w
  1597  03D6  00F2               	movwf	Serial_print@buffer+1
  1598  03D7  120A  118A  2542  120A  118A  	fcall	_Serial_print
  1599                           
  1600                           ;Safety main sathyabama.c: 70: Serial_write(0x0D);
  1601  03DC  300D               	movlw	13
  1602  03DD  120A  118A  23AD  120A  118A  	fcall	_Serial_write
  1603                           
  1604                           ;Safety main sathyabama.c: 71: Serial_write(0x0A);
  1605  03E2  300A               	movlw	10
  1606  03E3  120A  118A  23AD   	fcall	_Serial_write
  1607  03E6  0008               	return
  1608  03E7                     __end_of_Serial_println:	
  1609                           
  1610                           	psect	text6
  1611  0542                     __ptext6:	
  1612 ;; *************** function _Serial_print *****************
  1613 ;; Defined at:
  1614 ;;		line 63 in file "Safety main sathyabama.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  buffer          2    1[COMMON] PTR const unsigned char 
  1617 ;;		 -> STR_17(48), phone_number3(20), STR_16(48), phone_number2(20), 
  1618 ;;		 -> STR_15(48), phone_number1(20), STR_4(2), STR_3(10), 
  1619 ;;		 -> STR_2(18), STR_1(10), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  i               2    6[COMMON] int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         2       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0
  1633 ;;      Temps:          3       0       0       0       0
  1634 ;;      Totals:         7       0       0       0       0
  1635 ;;Total ram usage:        7 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    1
  1638 ;; This function calls:
  1639 ;;		_Serial_write
  1640 ;; This function is called by:
  1641 ;;		_Serial_println
  1642 ;;		_Start_message
  1643 ;;		_Type_message_content
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _Serial_print
  1649  0542                     _Serial_print:	
  1650                           
  1651                           ;Safety main sathyabama.c: 64: int i;
  1652                           ;Safety main sathyabama.c: 65: for (i=0;buffer[i] != '\0' ;i++)
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _Serial_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1656  0542  01F6               	clrf	Serial_print@i
  1657  0543  01F7               	clrf	Serial_print@i+1
  1658  0544                     l830:	
  1659  0544  0876               	movf	Serial_print@i,w
  1660  0545  0771               	addwf	Serial_print@buffer,w
  1661  0546  00F4               	movwf	??_Serial_print+1
  1662  0547  0872               	movf	Serial_print@buffer+1,w
  1663  0548  00F3               	movwf	??_Serial_print
  1664  0549  1803               	skipnc
  1665  054A  0AF3               	incf	??_Serial_print,f
  1666  054B  1BF6               	btfsc	Serial_print@i,7
  1667  054C  03F3               	decf	??_Serial_print,f
  1668  054D  0873               	movf	??_Serial_print,w
  1669  054E  00F5               	movwf	??_Serial_print+2
  1670  054F  0875               	movf	??_Serial_print+2,w
  1671  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0552  00FF               	movwf	127
  1674  0553  0874               	movf	??_Serial_print+1,w
  1675  0554  0084               	movwf	4
  1676  0555  120A  118A  2003  120A  118A  	fcall	stringtab
  1677  055A  3A00               	xorlw	0
  1678  055B  1903               	btfsc	3,2
  1679  055C  0008               	return
  1680                           
  1681                           ;Safety main sathyabama.c: 66: Serial_write(buffer[i]);
  1682  055D  0876               	movf	Serial_print@i,w
  1683  055E  0771               	addwf	Serial_print@buffer,w
  1684  055F  00F4               	movwf	??_Serial_print+1
  1685  0560  0872               	movf	Serial_print@buffer+1,w
  1686  0561  00F3               	movwf	??_Serial_print
  1687  0562  1803               	skipnc
  1688  0563  0AF3               	incf	??_Serial_print,f
  1689  0564  1BF6               	btfsc	Serial_print@i,7
  1690  0565  03F3               	decf	??_Serial_print,f
  1691  0566  0873               	movf	??_Serial_print,w
  1692  0567  00F5               	movwf	??_Serial_print+2
  1693  0568  0875               	movf	??_Serial_print+2,w
  1694  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1695  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1696  056B  00FF               	movwf	127
  1697  056C  0874               	movf	??_Serial_print+1,w
  1698  056D  0084               	movwf	4
  1699  056E  120A  118A  2003  120A  118A  	fcall	stringtab
  1700  0573  120A  118A  23AD  120A  118A  	fcall	_Serial_write
  1701  0578  3001               	movlw	1
  1702  0579  07F6               	addwf	Serial_print@i,f
  1703  057A  1803               	skipnc
  1704  057B  0AF7               	incf	Serial_print@i+1,f
  1705  057C  3000               	movlw	0
  1706  057D  07F7               	addwf	Serial_print@i+1,f
  1707  057E  2D44               	goto	l830
  1708  057F                     __end_of_Serial_print:	
  1709                           
  1710                           	psect	text7
  1711  0398                     __ptext7:	
  1712 ;; *************** function _Send_message *****************
  1713 ;; Defined at:
  1714 ;;		line 93 in file "Safety main sathyabama.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		_Serial_write
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _Send_message
  1744  0398                     _Send_message:	
  1745                           
  1746                           ;Safety main sathyabama.c: 94: Serial_write(0x1A);
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _Send_message: [wreg+status,2+status,0+pclath+cstack]
  1750  0398  301A               	movlw	26
  1751  0399  120A  118A  23AD   	fcall	_Serial_write
  1752  039C  0008               	return
  1753  039D                     __end_of_Send_message:	
  1754                           
  1755                           	psect	text8
  1756  03AD                     __ptext8:	
  1757 ;; *************** function _Serial_write *****************
  1758 ;; Defined at:
  1759 ;;		line 58 in file "Safety main sathyabama.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  data            1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  data            1    0[COMMON] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         1       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         1       0       0       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_Serial_print
  1783 ;;		_Serial_println
  1784 ;;		_Start_message
  1785 ;;		_Send_message
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _Serial_write
  1791  03AD                     _Serial_write:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _Serial_write: [wreg]
  1795                           ;Serial_write@data stored from wreg
  1796  03AD  00F0               	movwf	Serial_write@data
  1797  03AE                     l87:	
  1798                           ;Safety main sathyabama.c: 59: while(!(TXSTA & 0x02));
  1799                           
  1800  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1801  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1802  03B0  1C98               	btfss	24,1	;volatile
  1803  03B1  2BAE               	goto	l87
  1804                           
  1805                           ;Safety main sathyabama.c: 61: TXREG=data;
  1806  03B2  0870               	movf	Serial_write@data,w
  1807  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1808  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1809  03B5  0099               	movwf	25	;volatile
  1810  03B6  0008               	return
  1811  03B7                     __end_of_Serial_write:	
  1812                           
  1813                           	psect	text9
  1814  0505                     __ptext9:	
  1815 ;; *************** function _Lcd_Write_String *****************
  1816 ;; Defined at:
  1817 ;;		line 92 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  a               2    5[COMMON] PTR unsigned char 
  1820 ;;		 -> STR_19(17), STR_18(17), STR_14(16), STR_13(16), 
  1821 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1822 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  i               2   10[COMMON] int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         2       0       0       0       0
  1835 ;;      Locals:         2       0       0       0       0
  1836 ;;      Temps:          3       0       0       0       0
  1837 ;;      Totals:         7       0       0       0       0
  1838 ;;Total ram usage:        7 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    2
  1841 ;; This function calls:
  1842 ;;		_Lcd_Write_Char
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _Lcd_Write_String
  1850  0505                     _Lcd_Write_String:	
  1851                           
  1852                           ;lcd.h: 94: int i;
  1853                           ;lcd.h: 95: for(i=0;a[i]!='\0';i++)
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1857  0505  01FA               	clrf	Lcd_Write_String@i
  1858  0506  01FB               	clrf	Lcd_Write_String@i+1
  1859  0507                     l864:	
  1860  0507  087A               	movf	Lcd_Write_String@i,w
  1861  0508  0775               	addwf	Lcd_Write_String@a,w
  1862  0509  00F8               	movwf	??_Lcd_Write_String+1
  1863  050A  0876               	movf	Lcd_Write_String@a+1,w
  1864  050B  00F7               	movwf	??_Lcd_Write_String
  1865  050C  1803               	skipnc
  1866  050D  0AF7               	incf	??_Lcd_Write_String,f
  1867  050E  1BFA               	btfsc	Lcd_Write_String@i,7
  1868  050F  03F7               	decf	??_Lcd_Write_String,f
  1869  0510  0877               	movf	??_Lcd_Write_String,w
  1870  0511  00F9               	movwf	??_Lcd_Write_String+2
  1871  0512  0879               	movf	??_Lcd_Write_String+2,w
  1872  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0515  00FF               	movwf	127
  1875  0516  0878               	movf	??_Lcd_Write_String+1,w
  1876  0517  0084               	movwf	4
  1877  0518  120A  118A  2003  120A  118A  	fcall	stringtab
  1878  051D  3A00               	xorlw	0
  1879  051E  1903               	btfsc	3,2
  1880  051F  0008               	return
  1881                           
  1882                           ;lcd.h: 96: Lcd_Write_Char(a[i]);
  1883  0520  087A               	movf	Lcd_Write_String@i,w
  1884  0521  0775               	addwf	Lcd_Write_String@a,w
  1885  0522  00F8               	movwf	??_Lcd_Write_String+1
  1886  0523  0876               	movf	Lcd_Write_String@a+1,w
  1887  0524  00F7               	movwf	??_Lcd_Write_String
  1888  0525  1803               	skipnc
  1889  0526  0AF7               	incf	??_Lcd_Write_String,f
  1890  0527  1BFA               	btfsc	Lcd_Write_String@i,7
  1891  0528  03F7               	decf	??_Lcd_Write_String,f
  1892  0529  0877               	movf	??_Lcd_Write_String,w
  1893  052A  00F9               	movwf	??_Lcd_Write_String+2
  1894  052B  0879               	movf	??_Lcd_Write_String+2,w
  1895  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1896  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1897  052E  00FF               	movwf	127
  1898  052F  0878               	movf	??_Lcd_Write_String+1,w
  1899  0530  0084               	movwf	4
  1900  0531  120A  118A  2003  120A  118A  	fcall	stringtab
  1901  0536  120A  118A  2490  120A  118A  	fcall	_Lcd_Write_Char
  1902  053B  3001               	movlw	1
  1903  053C  07FA               	addwf	Lcd_Write_String@i,f
  1904  053D  1803               	skipnc
  1905  053E  0AFB               	incf	Lcd_Write_String@i+1,f
  1906  053F  3000               	movlw	0
  1907  0540  07FB               	addwf	Lcd_Write_String@i+1,f
  1908  0541  2D07               	goto	l864
  1909  0542                     __end_of_Lcd_Write_String:	
  1910                           
  1911                           	psect	text10
  1912  0490                     __ptext10:	
  1913 ;; *************** function _Lcd_Write_Char *****************
  1914 ;; Defined at:
  1915 ;;		line 76 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  a               1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  a               1    4[COMMON] unsigned char 
  1920 ;;  y               1    3[COMMON] unsigned char 
  1921 ;;  temp            1    2[COMMON] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         3       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0
  1934 ;;      Totals:         4       0       0       0       0
  1935 ;;Total ram usage:        4 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		_Lcd_Port
  1940 ;; This function is called by:
  1941 ;;		_Lcd_Write_String
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _Lcd_Write_Char
  1947  0490                     _Lcd_Write_Char:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1951                           ;Lcd_Write_Char@a stored from wreg
  1952  0490  00F4               	movwf	Lcd_Write_Char@a
  1953                           
  1954                           ;lcd.h: 78: char temp,y;
  1955                           ;lcd.h: 79: temp = a&0x0F;
  1956  0491  0874               	movf	Lcd_Write_Char@a,w
  1957  0492  390F               	andlw	15
  1958  0493  00F1               	movwf	??_Lcd_Write_Char
  1959  0494  0871               	movf	??_Lcd_Write_Char,w
  1960  0495  00F2               	movwf	Lcd_Write_Char@temp
  1961                           
  1962                           ;lcd.h: 80: y = a&0xF0;
  1963  0496  0874               	movf	Lcd_Write_Char@a,w
  1964  0497  39F0               	andlw	240
  1965  0498  00F1               	movwf	??_Lcd_Write_Char
  1966  0499  0871               	movf	??_Lcd_Write_Char,w
  1967  049A  00F3               	movwf	Lcd_Write_Char@y
  1968                           
  1969                           ;lcd.h: 81: RD2 = 1;
  1970  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1971  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1972  049D  1508               	bsf	8,2	;volatile
  1973                           
  1974                           ;lcd.h: 82: Lcd_Port(y>>4);
  1975  049E  0873               	movf	Lcd_Write_Char@y,w
  1976  049F  00F1               	movwf	??_Lcd_Write_Char
  1977  04A0  3004               	movlw	4
  1978  04A1                     u95:	
  1979  04A1  1003               	clrc
  1980  04A2  0CF1               	rrf	??_Lcd_Write_Char,f
  1981  04A3  3EFF               	addlw	-1
  1982  04A4  1D03               	skipz
  1983  04A5  2CA1               	goto	u95
  1984  04A6  0871               	movf	??_Lcd_Write_Char,w
  1985  04A7  120A  118A  23FF  120A  118A  	fcall	_Lcd_Port
  1986                           
  1987                           ;lcd.h: 83: RD3 = 1;
  1988  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1989  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1990  04AE  1588               	bsf	8,3	;volatile
  1991                           
  1992                           ;lcd.h: 84: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1993  04AF  3042               	movlw	66
  1994  04B0  00F1               	movwf	??_Lcd_Write_Char
  1995  04B1                     u417:	
  1996  04B1  0BF1               	decfsz	??_Lcd_Write_Char,f
  1997  04B2  2CB1               	goto	u417
  1998  04B3  0000               	nop
  1999                           
  2000                           ;lcd.h: 85: RD3 = 0;
  2001  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2002  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2003  04B6  1188               	bcf	8,3	;volatile
  2004                           
  2005                           ;lcd.h: 86: Lcd_Port(temp);
  2006  04B7  0872               	movf	Lcd_Write_Char@temp,w
  2007  04B8  120A  118A  23FF  120A  118A  	fcall	_Lcd_Port
  2008                           
  2009                           ;lcd.h: 87: RD3 = 1;
  2010  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2011  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2012  04BF  1588               	bsf	8,3	;volatile
  2013                           
  2014                           ;lcd.h: 88: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2015  04C0  3042               	movlw	66
  2016  04C1  00F1               	movwf	??_Lcd_Write_Char
  2017  04C2                     u427:	
  2018  04C2  0BF1               	decfsz	??_Lcd_Write_Char,f
  2019  04C3  2CC2               	goto	u427
  2020  04C4  0000               	nop
  2021                           
  2022                           ;lcd.h: 89: RD3 = 0;
  2023  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2024  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2025  04C7  1188               	bcf	8,3	;volatile
  2026  04C8  0008               	return
  2027  04C9                     __end_of_Lcd_Write_Char:	
  2028                           
  2029                           	psect	text11
  2030  057F                     __ptext11:	
  2031 ;; *************** function _Lcd_Set_Cursor *****************
  2032 ;; Defined at:
  2033 ;;		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  a               1    wreg     unsigned char 
  2036 ;;  b               1    4[COMMON] unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  a               1    7[COMMON] unsigned char 
  2039 ;;  temp            1   10[COMMON] unsigned char 
  2040 ;;  y               1    9[COMMON] unsigned char 
  2041 ;;  z               1    8[COMMON] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         1       0       0       0       0
  2052 ;;      Locals:         4       0       0       0       0
  2053 ;;      Temps:          2       0       0       0       0
  2054 ;;      Totals:         7       0       0       0       0
  2055 ;;Total ram usage:        7 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    2
  2058 ;; This function calls:
  2059 ;;		_Lcd_Cmd
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _Lcd_Set_Cursor
  2067  057F                     _Lcd_Set_Cursor:	
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2071                           ;Lcd_Set_Cursor@a stored from wreg
  2072  057F  00F7               	movwf	Lcd_Set_Cursor@a
  2073                           
  2074                           ;lcd.h: 39: char temp,z,y;
  2075                           ;lcd.h: 40: if(a == 1)
  2076  0580  0377               	decf	Lcd_Set_Cursor@a,w
  2077  0581  1D03               	btfss	3,2
  2078  0582  2DA4               	goto	l848
  2079                           
  2080                           ;lcd.h: 41: {
  2081                           ;lcd.h: 42: temp = 0x80 + b - 1;
  2082  0583  0874               	movf	Lcd_Set_Cursor@b,w
  2083  0584  3E7F               	addlw	127
  2084  0585  00F5               	movwf	??_Lcd_Set_Cursor
  2085  0586  0875               	movf	??_Lcd_Set_Cursor,w
  2086  0587  00FA               	movwf	Lcd_Set_Cursor@temp
  2087                           
  2088                           ;lcd.h: 43: z = temp>>4;
  2089  0588  087A               	movf	Lcd_Set_Cursor@temp,w
  2090  0589  00F5               	movwf	??_Lcd_Set_Cursor
  2091  058A  3004               	movlw	4
  2092  058B                     u225:	
  2093  058B  1003               	clrc
  2094  058C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2095  058D  3EFF               	addlw	-1
  2096  058E  1D03               	skipz
  2097  058F  2D8B               	goto	u225
  2098  0590  0875               	movf	??_Lcd_Set_Cursor,w
  2099  0591  00F6               	movwf	??_Lcd_Set_Cursor+1
  2100  0592  0876               	movf	??_Lcd_Set_Cursor+1,w
  2101  0593  00F8               	movwf	Lcd_Set_Cursor@z
  2102                           
  2103                           ;lcd.h: 44: y = temp & 0x0F;
  2104  0594  087A               	movf	Lcd_Set_Cursor@temp,w
  2105  0595  390F               	andlw	15
  2106  0596  00F5               	movwf	??_Lcd_Set_Cursor
  2107  0597  0875               	movf	??_Lcd_Set_Cursor,w
  2108  0598  00F9               	movwf	Lcd_Set_Cursor@y
  2109                           
  2110                           ;lcd.h: 45: Lcd_Cmd(z);
  2111  0599  0878               	movf	Lcd_Set_Cursor@z,w
  2112  059A  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2113                           
  2114                           ;lcd.h: 46: Lcd_Cmd(y);
  2115  059F  0879               	movf	Lcd_Set_Cursor@y,w
  2116  05A0  120A  118A  2419   	fcall	_Lcd_Cmd
  2117                           
  2118                           ;lcd.h: 47: }
  2119  05A3  0008               	return
  2120  05A4                     l848:	
  2121                           
  2122                           ;lcd.h: 48: else if(a == 2)
  2123  05A4  3002               	movlw	2
  2124  05A5  0677               	xorwf	Lcd_Set_Cursor@a,w
  2125  05A6  1D03               	btfss	3,2
  2126  05A7  0008               	return
  2127                           
  2128                           ;lcd.h: 49: {
  2129                           ;lcd.h: 50: temp = 0xC0 + b - 1;
  2130  05A8  0874               	movf	Lcd_Set_Cursor@b,w
  2131  05A9  3EBF               	addlw	191
  2132  05AA  00F5               	movwf	??_Lcd_Set_Cursor
  2133  05AB  0875               	movf	??_Lcd_Set_Cursor,w
  2134  05AC  00FA               	movwf	Lcd_Set_Cursor@temp
  2135                           
  2136                           ;lcd.h: 51: z = temp>>4;
  2137  05AD  087A               	movf	Lcd_Set_Cursor@temp,w
  2138  05AE  00F5               	movwf	??_Lcd_Set_Cursor
  2139  05AF  3004               	movlw	4
  2140  05B0                     u245:	
  2141  05B0  1003               	clrc
  2142  05B1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2143  05B2  3EFF               	addlw	-1
  2144  05B3  1D03               	skipz
  2145  05B4  2DB0               	goto	u245
  2146  05B5  0875               	movf	??_Lcd_Set_Cursor,w
  2147  05B6  00F6               	movwf	??_Lcd_Set_Cursor+1
  2148  05B7  0876               	movf	??_Lcd_Set_Cursor+1,w
  2149  05B8  00F8               	movwf	Lcd_Set_Cursor@z
  2150                           
  2151                           ;lcd.h: 52: y = temp & 0x0F;
  2152  05B9  087A               	movf	Lcd_Set_Cursor@temp,w
  2153  05BA  390F               	andlw	15
  2154  05BB  00F5               	movwf	??_Lcd_Set_Cursor
  2155  05BC  0875               	movf	??_Lcd_Set_Cursor,w
  2156  05BD  00F9               	movwf	Lcd_Set_Cursor@y
  2157                           
  2158                           ;lcd.h: 53: Lcd_Cmd(z);
  2159  05BE  0878               	movf	Lcd_Set_Cursor@z,w
  2160  05BF  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2161                           
  2162                           ;lcd.h: 54: Lcd_Cmd(y);
  2163  05C4  0879               	movf	Lcd_Set_Cursor@y,w
  2164  05C5  120A  118A  2419   	fcall	_Lcd_Cmd
  2165  05C8  0008               	return
  2166  05C9                     __end_of_Lcd_Set_Cursor:	
  2167                           
  2168                           	psect	text12
  2169  05C9                     __ptext12:	
  2170 ;; *************** function _Lcd_Init *****************
  2171 ;; Defined at:
  2172 ;;		line 58 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          2       0       0       0       0
  2189 ;;      Totals:         2       0       0       0       0
  2190 ;;Total ram usage:        2 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    2
  2193 ;; This function calls:
  2194 ;;		_Lcd_Cmd
  2195 ;;		_Lcd_Port
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _Lcd_Init
  2203  05C9                     _Lcd_Init:	
  2204                           
  2205                           ;lcd.h: 60: Lcd_Port(0x00);
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2209  05C9  3000               	movlw	0
  2210  05CA  120A  118A  23FF  120A  118A  	fcall	_Lcd_Port
  2211                           
  2212                           ;lcd.h: 61: _delay((unsigned long)((20)*(20000000/4000.0)));
  2213  05CF  3082               	movlw	130
  2214  05D0  00F5               	movwf	??_Lcd_Init+1
  2215  05D1  30DD               	movlw	221
  2216  05D2  00F4               	movwf	??_Lcd_Init
  2217  05D3                     u437:	
  2218  05D3  0BF4               	decfsz	??_Lcd_Init,f
  2219  05D4  2DD3               	goto	u437
  2220  05D5  0BF5               	decfsz	??_Lcd_Init+1,f
  2221  05D6  2DD3               	goto	u437
  2222  05D7  2DD8               	nop2
  2223                           
  2224                           ;lcd.h: 62: Lcd_Cmd(0x03);
  2225  05D8  3003               	movlw	3
  2226  05D9  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2227                           
  2228                           ;lcd.h: 63: _delay((unsigned long)((5)*(20000000/4000.0)));
  2229  05DE  3021               	movlw	33
  2230  05DF  00F5               	movwf	??_Lcd_Init+1
  2231  05E0  3076               	movlw	118
  2232  05E1  00F4               	movwf	??_Lcd_Init
  2233  05E2                     u447:	
  2234  05E2  0BF4               	decfsz	??_Lcd_Init,f
  2235  05E3  2DE2               	goto	u447
  2236  05E4  0BF5               	decfsz	??_Lcd_Init+1,f
  2237  05E5  2DE2               	goto	u447
  2238  05E6  0000               	nop
  2239                           
  2240                           ;lcd.h: 64: Lcd_Cmd(0x03);
  2241  05E7  3003               	movlw	3
  2242  05E8  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2243                           
  2244                           ;lcd.h: 65: _delay((unsigned long)((11)*(20000000/4000.0)));
  2245  05ED  3048               	movlw	72
  2246  05EE  00F5               	movwf	??_Lcd_Init+1
  2247  05EF  306C               	movlw	108
  2248  05F0  00F4               	movwf	??_Lcd_Init
  2249  05F1                     u457:	
  2250  05F1  0BF4               	decfsz	??_Lcd_Init,f
  2251  05F2  2DF1               	goto	u457
  2252  05F3  0BF5               	decfsz	??_Lcd_Init+1,f
  2253  05F4  2DF1               	goto	u457
  2254  05F5  0000               	nop
  2255                           
  2256                           ;lcd.h: 66: Lcd_Cmd(0x03);
  2257  05F6  3003               	movlw	3
  2258  05F7  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2259                           
  2260                           ;lcd.h: 67: Lcd_Cmd(0x02);
  2261  05FC  3002               	movlw	2
  2262  05FD  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2263                           
  2264                           ;lcd.h: 68: Lcd_Cmd(0x02);
  2265  0602  3002               	movlw	2
  2266  0603  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2267                           
  2268                           ;lcd.h: 69: Lcd_Cmd(0x08);
  2269  0608  3008               	movlw	8
  2270  0609  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2271                           
  2272                           ;lcd.h: 70: Lcd_Cmd(0x00);
  2273  060E  3000               	movlw	0
  2274  060F  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2275                           
  2276                           ;lcd.h: 71: Lcd_Cmd(0x0C);
  2277  0614  300C               	movlw	12
  2278  0615  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2279                           
  2280                           ;lcd.h: 72: Lcd_Cmd(0x00);
  2281  061A  3000               	movlw	0
  2282  061B  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2283                           
  2284                           ;lcd.h: 73: Lcd_Cmd(0x06);
  2285  0620  3006               	movlw	6
  2286  0621  120A  118A  2419   	fcall	_Lcd_Cmd
  2287  0624  0008               	return
  2288  0625                     __end_of_Lcd_Init:	
  2289                           
  2290                           	psect	text13
  2291  03B7                     __ptext13:	
  2292 ;; *************** function _Lcd_Clear *****************
  2293 ;; Defined at:
  2294 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2   62[None  ] int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    2
  2315 ;; This function calls:
  2316 ;;		_Lcd_Cmd
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _Lcd_Clear
  2324  03B7                     _Lcd_Clear:	
  2325                           
  2326                           ;lcd.h: 33: Lcd_Cmd(0);
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2330  03B7  3000               	movlw	0
  2331  03B8  120A  118A  2419  120A  118A  	fcall	_Lcd_Cmd
  2332                           
  2333                           ;lcd.h: 34: Lcd_Cmd(1);
  2334  03BD  3001               	movlw	1
  2335  03BE  120A  118A  2419   	fcall	_Lcd_Cmd
  2336  03C1  0008               	return
  2337  03C2                     __end_of_Lcd_Clear:	
  2338                           
  2339                           	psect	text14
  2340  0419                     __ptext14:	
  2341 ;; *************** function _Lcd_Cmd *****************
  2342 ;; Defined at:
  2343 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  a               1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  a               1    3[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0
  2360 ;;      Totals:         3       0       0       0       0
  2361 ;;Total ram usage:        3 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    1
  2364 ;; This function calls:
  2365 ;;		_Lcd_Port
  2366 ;; This function is called by:
  2367 ;;		_Lcd_Clear
  2368 ;;		_Lcd_Set_Cursor
  2369 ;;		_Lcd_Init
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _Lcd_Cmd
  2375  0419                     _Lcd_Cmd:	
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2379                           ;Lcd_Cmd@a stored from wreg
  2380  0419  00F3               	movwf	Lcd_Cmd@a
  2381                           
  2382                           ;lcd.h: 24: RD2 = 0;
  2383  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2384  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2385  041C  1108               	bcf	8,2	;volatile
  2386                           
  2387                           ;lcd.h: 25: Lcd_Port(a);
  2388  041D  0873               	movf	Lcd_Cmd@a,w
  2389  041E  120A  118A  23FF  120A  118A  	fcall	_Lcd_Port
  2390                           
  2391                           ;lcd.h: 26: RD3 = 1;
  2392  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0425  1588               	bsf	8,3	;volatile
  2395                           
  2396                           ;lcd.h: 27: _delay((unsigned long)((4)*(20000000/4000.0)));
  2397  0426  301A               	movlw	26
  2398  0427  00F2               	movwf	??_Lcd_Cmd+1
  2399  0428  30F8               	movlw	248
  2400  0429  00F1               	movwf	??_Lcd_Cmd
  2401  042A                     u467:	
  2402  042A  0BF1               	decfsz	??_Lcd_Cmd,f
  2403  042B  2C2A               	goto	u467
  2404  042C  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2405  042D  2C2A               	goto	u467
  2406  042E  0000               	nop
  2407                           
  2408                           ;lcd.h: 28: RD3 = 0;
  2409  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0431  1188               	bcf	8,3	;volatile
  2412  0432  0008               	return
  2413  0433                     __end_of_Lcd_Cmd:	
  2414                           
  2415                           	psect	text15
  2416  03FF                     __ptext15:	
  2417 ;; *************** function _Lcd_Port *****************
  2418 ;; Defined at:
  2419 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  a               1    wreg     unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    0[COMMON] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         1       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         1       0       0       0       0
  2437 ;;Total ram usage:        1 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_Lcd_Cmd
  2443 ;;		_Lcd_Init
  2444 ;;		_Lcd_Write_Char
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _Lcd_Port
  2450  03FF                     _Lcd_Port:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _Lcd_Port: [wreg]
  2454                           ;Lcd_Port@a stored from wreg
  2455  03FF  00F0               	movwf	Lcd_Port@a
  2456                           
  2457                           ;lcd.h: 2: if(a & 1)
  2458  0400  1C70               	btfss	Lcd_Port@a,0
  2459  0401  2C06               	goto	l49
  2460                           
  2461                           ;lcd.h: 3: RD4 = 1;
  2462  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0404  1608               	bsf	8,4	;volatile
  2465  0405  2C09               	goto	l50
  2466  0406                     l49:	
  2467                           
  2468                           ;lcd.h: 4: else
  2469                           ;lcd.h: 5: RD4 = 0;
  2470  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0408  1208               	bcf	8,4	;volatile
  2473  0409                     l50:	
  2474                           
  2475                           ;lcd.h: 7: if(a & 2)
  2476  0409  1CF0               	btfss	Lcd_Port@a,1
  2477  040A  2C0D               	goto	l51
  2478                           
  2479                           ;lcd.h: 8: RD5 = 1;
  2480  040B  1688               	bsf	8,5	;volatile
  2481  040C  2C0E               	goto	l52
  2482  040D                     l51:	
  2483                           
  2484                           ;lcd.h: 9: else
  2485                           ;lcd.h: 10: RD5 = 0;
  2486  040D  1288               	bcf	8,5	;volatile
  2487  040E                     l52:	
  2488                           
  2489                           ;lcd.h: 12: if(a & 4)
  2490  040E  1D70               	btfss	Lcd_Port@a,2
  2491  040F  2C12               	goto	l53
  2492                           
  2493                           ;lcd.h: 13: RD6 = 1;
  2494  0410  1708               	bsf	8,6	;volatile
  2495  0411  2C13               	goto	l54
  2496  0412                     l53:	
  2497                           
  2498                           ;lcd.h: 14: else
  2499                           ;lcd.h: 15: RD6 = 0;
  2500  0412  1308               	bcf	8,6	;volatile
  2501  0413                     l54:	
  2502                           
  2503                           ;lcd.h: 17: if(a & 8)
  2504  0413  1DF0               	btfss	Lcd_Port@a,3
  2505  0414  2C17               	goto	l55
  2506                           
  2507                           ;lcd.h: 18: RD7 = 1;
  2508  0415  1788               	bsf	8,7	;volatile
  2509  0416  0008               	return
  2510  0417                     l55:	
  2511                           
  2512                           ;lcd.h: 19: else
  2513                           ;lcd.h: 20: RD7 = 0;
  2514  0417  1388               	bcf	8,7	;volatile
  2515  0418  0008               	return
  2516  0419                     __end_of_Lcd_Port:	
  2517  007E                     btemp	set	126	;btemp
  2518  007E                     wtemp0	set	126


Data Sizes:
    Strings     254
    Constant    0
    Data        60
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      3      65
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Type_message_content@Content	PTR unsigned char  size(2) Largest target is 48
		 -> STR_17(CODE[48]), STR_16(CODE[48]), STR_15(CODE[48]), 

    Start_message@phone_number	PTR unsigned char  size(1) Largest target is 20
		 -> phone_number3(BANK0[20]), phone_number2(BANK0[20]), phone_number1(BANK0[20]), 

    Serial_println@buffer	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[10]), 

    Serial_print@buffer	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_17(CODE[48]), phone_number3(BANK0[20]), STR_16(CODE[48]), phone_number2(BANK0[20]), 
		 -> STR_15(CODE[48]), phone_number1(BANK0[20]), STR_4(CODE[2]), STR_3(CODE[10]), 
		 -> STR_2(CODE[18]), STR_1(CODE[10]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Setup_messaging
    _Type_message_content->_Serial_print
    _Start_message->_Serial_print
    _Setup_messaging->_Serial_println
    _Serial_println->_Serial_print
    _Serial_print->_Serial_write
    _Send_message->_Serial_write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3604
                                              0 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _Send_message
                    _Setup_messaging
                      _Start_message
               _Type_message_content
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Type_message_content                                 2     0      2     551
                                              8 COMMON     2     0      2
                       _Serial_print
 ---------------------------------------------------------------------------------
 (1) _Start_message                                        4     4      0     488
                                              8 COMMON     4     4      0
                       _Serial_print
                       _Serial_write
 ---------------------------------------------------------------------------------
 (1) _Setup_messaging                                      3     3      0     513
                                             10 COMMON     3     3      0
                     _Serial_println
 ---------------------------------------------------------------------------------
 (2) _Serial_println                                       2     0      2     513
                                              8 COMMON     2     0      2
                       _Serial_print
                       _Serial_write
 ---------------------------------------------------------------------------------
 (2) _Serial_print                                         7     5      2     370
                                              1 COMMON     7     5      2
                       _Serial_write
 ---------------------------------------------------------------------------------
 (1) _Send_message                                         0     0      0      15
                       _Serial_write
 ---------------------------------------------------------------------------------
 (3) _Serial_write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     846
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     981
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Send_message
     _Serial_write
   _Setup_messaging
     _Serial_println
       _Serial_print
         _Serial_write
       _Serial_write
   _Start_message
     _Serial_print
       _Serial_write
     _Serial_write
   _Type_message_content
     _Serial_print
       _Serial_write
   _UART_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      41       5       81.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      80      12        0.0%
ABS                  0      0      80       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jan 17 15:28:34 2018

                            pc 0002                    __CFG_CP$OFF 0000                             l50 0409  
                           l51 040D                             l52 040E                             l53 0412  
                           l54 0413                             l55 0417                             l49 0406  
                           l87 03AE                             u95 04A1                             fsr 0004  
                          l830 0544                            l916 0699                            l848 05A4  
                          l864 0507                            _RB4 0034                            _RB5 0035  
                          _RD2 0042                            _RD3 0043                            _RD4 0044  
                          _RD5 0045                            _RD6 0046                            _RD7 0047  
                          u225 058B                            u307 06B7                            u245 05B0  
                          u317 06D7                            u407 0458                            u327 0708  
                          u417 04B1                            u337 0748                   __CFG_CPD$OFF 0000  
                          u427 04C2                            u347 076B                            u437 05D3  
                          u357 078E                            u447 05E2                            u367 07C9  
                          u457 05F1                            u377 07DF                            u297 0663  
                          u467 042A                            u387 0488                            u397 0442  
                          _RX9 00C6                            _TX9 04C6                            fsr0 0004  
                          indf 0000                   __CFG_FOSC$HS 0000                   __CFG_LVP$OFF 0000  
              _Setup_messaging 0433                           STR_1 08F4                           STR_2 0830  
                         STR_3 08EA                           STR_4 08F2                           STR_5 0897  
                         STR_6 0886                           STR_7 08B9                           STR_8 0842  
                         STR_9 0864                           _BRGH 04C2                           _CREN 00C4  
                         _SPEN 00C7                           _TXEN 04C5                           _SYNC 04C4  
                 __CFG_WRT$OFF 0000              ?_Lcd_Write_String 0075                           _main 0625  
                         btemp 007E           Serial_println@buffer 0078                           start 0000  
           ??_Lcd_Write_String 0077                __end_of_Lcd_Cmd 0433         ??_Type_message_content 007A  
                        ?_main 0070                          STR_10 0875                          STR_11 08A8  
                        STR_12 0842                          STR_13 08DA                          STR_14 08CA  
                        STR_15 0800                          STR_16 0800                          STR_17 0800  
                __CFG_WDTE$OFF 0000                          STR_18 0853                          STR_19 0842  
  Type_message_content@Content 0078                          _SPBRG 0099        __size_of_Lcd_Set_Cursor 004A  
                        _TRISD 0088                          _TXREG 0019                          _TXSTA 0098  
           __size_of_UART_Init 0018                          _index 005F                 __CFG_BOREN$OFF 0000  
                        pclath 000A                          status 0003                          wtemp0 007E  
              ??_Start_message 0078               __end_of_Lcd_Init 0625               __end_of_Lcd_Port 0419  
              __initialization 07E6                   __end_of_main 07E6                         ??_main 005C  
           __size_of_Lcd_Clear 000B        __end_of_Setup_messaging 0460                 _Serial_println 03D3  
                    ??_Lcd_Cmd 0071        __size_of_Lcd_Write_Char 0039                         _TRISC6 043E  
                       _TRISC7 043F                 __CFG_PWRTE$OFF 0000              __end_of_UART_Init 03FF  
       __end_of_Serial_println 03E7                Lcd_Set_Cursor@a 0077                Lcd_Set_Cursor@b 0074  
              Lcd_Set_Cursor@y 0079                Lcd_Set_Cursor@z 0078        __end_of__initialization 07FC  
            __end_of_Lcd_Clear 03C2                  ?_Send_message 0070                 __pcstackCOMMON 0070  
                 __pidataBANK0 04C9                ?_Serial_println 0078                 _Lcd_Set_Cursor 057F  
             ?_Setup_messaging 0070                      ?_Lcd_Init 0070                      ?_Lcd_Port 0070  
    Start_message@phone_number 007B                     __pbssBANK0 005F                     __pbssBANK1 00A0  
                ?_Serial_print 0071                  ?_Serial_write 0070                 ??_Send_message 0071  
                   __pmaintext 0625      __size_of_Lcd_Write_String 003D         __end_of_Lcd_Set_Cursor 05C9  
                   ??_Lcd_Init 0074                     ??_Lcd_Port 0070                     __stringtab 0003  
               _Lcd_Write_Char 0490                        _Lcd_Cmd 0419                 ??_Serial_print 0073  
               ??_Serial_write 0070  __size_of_Type_message_content 0008                ?_Lcd_Set_Cursor 0074  
                      __ptext1 03E7                        __ptext2 039D                        __ptext3 0460  
                      __ptext4 0433                        __ptext5 03D3                        __ptext6 0542  
                      __ptext7 0398                        __ptext8 03AD                        __ptext9 0505  
                Serial_print@i 0076                        clrloop0 03A6         __end_of_Lcd_Write_Char 04C9  
         end_of_initialization 07FC          __end_of_Start_message 0490                      Lcd_Port@a 0070  
                 __pstringtext 0800                      _UART_Init 03E7               Serial_write@data 0070  
                    _TRISBbits 0086           __end_of_Send_message 039D                ?_Lcd_Write_Char 0070  
            Lcd_Write_String@a 0075              Lcd_Write_String@i 007A                      _Lcd_Clear 03B7  
             ??_Serial_println 007A               _Lcd_Write_String 0505                     ?_UART_Init 0070  
         __end_of_Serial_print 057F           __end_of_Serial_write 03B7            start_initialization 07E6  
            __size_of_Lcd_Init 005C              __size_of_Lcd_Port 001A                     ?_Lcd_Clear 0070  
                   init_fetch0 03C2                    __pdataBANK0 0020                Lcd_Write_Char@a 0074  
              Lcd_Write_Char@y 0073                      ___latbits 0002                  __pcstackBANK0 005C  
                _phone_number1 0048                  _phone_number2 0034                  _phone_number3 0020  
     __size_of_Setup_messaging 002D                       ?_Lcd_Cmd 0070               ??_Lcd_Set_Cursor 0075  
                  ??_UART_Init 0070                      __pstrings 0003          __size_of_Send_message 0005  
 __end_of_Type_message_content 03A5                      clear_ram0 03A5             Serial_print@buffer 0071  
                     Lcd_Cmd@a 0073                   _Send_message 0398                    ??_Lcd_Clear 0074  
        __size_of_Serial_print 003D          __size_of_Serial_write 000A                    __stringbase 0015  
             ??_Lcd_Write_Char 0071                       _Lcd_Init 05C9                       _Lcd_Port 03FF  
     __end_of_Lcd_Write_String 0542               __size_of_Lcd_Cmd 001A                   _Serial_print 0542  
                 _Serial_write 03AD              ??_Setup_messaging 007A             __end_of__stringtab 0015  
                     __ptext10 0490                       __ptext11 057F                       __ptext12 05C9  
                     __ptext13 03B7                       __ptext14 0419                       __ptext15 03FF  
       __size_of_Start_message 0030                 _message_buffer 00A0                  __size_of_main 01C1  
         _Type_message_content 039D                       init_ram0 03C6             Lcd_Write_Char@temp 0072  
                    stringcode 000D                  _Start_message 0460          ?_Type_message_content 0078  
           Lcd_Set_Cursor@temp 007A        __size_of_Serial_println 0014                       stringtab 0003  
               ?_Start_message 0070  
