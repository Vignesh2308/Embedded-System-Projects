Microchip MPLAB XC8 Compiler V1.42 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.42\dat\en_msgs.txt -cs \
  -h+dist/default/production\BORDER.X.production.sym \
  --cmf=dist/default/production\BORDER.X.production.cmf -z -Q16F877A \
  -oC:\Users\SARAVA~1\AppData\Local\Temp\s4lk.2 \
  -Mdist/default/production/BORDER.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\SARAVA~1\AppData\Local\Temp\s4lk.obj \
  dist/default/production\BORDER.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\SARAVA~1\AppData\Local\Temp\s4lk.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\BORDER.X.production.obj
                cinit                                15       15       14        8       0
                intentry                              4        4        E        8       0
                text15                              6A1      6A1        A      932       0
                text14                              63C      63C       1B      932       0
                text13                              5FD      5FD       23      932       0
                text12                               29       29      222        8       0
                text11                              66F      66F       18      932       0
                text10                              620      620       1C      932       0
                text9                               696      696        B      932       0
                text8                               499      499       61      932       0
                text7                               4FA      4FA       52      932       0
                text6                               58D      58D       3D      932       0
                text5                               54C      54C       41      932       0
                text4                               6AB      6AB        9      932       0
                text3                               5CA      5CA       33      932       0
                text2                               687      687        F      932       0
                text1                               657      657       18      932       0
                maintext                            24B      24B      1A8        8       0
                cstackBANK0                          58       58        F       20       1
                cstackCOMMON                         70       70        C       70       1
                clrtext                             6B4      6B4        8      932       0
                bssBANK1                             A0       A0       28       A0       1
                bssBANK0                             20       20       38       20       1
                bssCOMMON                            7C       7C        1       70       1
                strings                             400      400       99      800       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       14         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text15                              6A1      6A1        A         0
                text14                              63C      63C       1B         0
                text13                              5FD      5FD       23         0
                text12                               29       29      222         0
                text11                              66F      66F       18         0
                text10                              620      620       1C         0
                text9                               696      696        B         0
                text8                               499      499       61         0
                text7                               4FA      4FA       52         0
                text6                               58D      58D       3D         0
                text5                               54C      54C       41         0
                text4                               6AB      6AB        9         0
                text3                               5CA      5CA       33         0
                text2                               687      687        F         0
                text1                               657      657       18         0
                maintext                            24B      24B      1A8         0
                clrtext                             6B4      6B4        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             400      400       99         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                bssCOMMON                            7C       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          58       58        F         1
                bssBANK0                             20       20       38         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       28         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0003EF  0003F3         8       0  CODE        2
                bssBANK0                       000020  000047  000067        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                bssBANK1                       0000A0  000028  0000C8        A0       1  BANK1       1
                strings                        000400  000099  000499       800       0  STRING      2
                text8                          000499  000223  0006BC       932       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0067-006F              9           1
        BANK1            00C8-00EF             28           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         03F3-03FF              D
                         06BC-1FFF            800
        COMMON           007D-007D              1           1
        CONST            0003-0003              1           2
                         03F3-03FF              D
                         06BC-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         03F3-03FF              D
                         06BC-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0067-006F              9           1
                         00C8-00EF             28
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         03F3-03FF              D
                         06BC-1FFF           1944
        STRING           0003-0003              1           2
                         03F3-03FF              D
                         06BC-1FFF            100

                                  Symbol Table

?_adc_read                 cstackBANK0  0058
Lcd_Cmd@a                  cstackBANK0  005B
Lcd_Port@a                 cstackBANK0  0058
Lcd_Set_Cursor@a           cstackBANK0  005F
Lcd_Set_Cursor@b           cstackBANK0  005C
Lcd_Set_Cursor@temp        cstackBANK0  0062
Lcd_Set_Cursor@y           cstackBANK0  0061
Lcd_Set_Cursor@z           cstackBANK0  0060
Lcd_Write_Char@a           cstackBANK0  005C
Lcd_Write_Char@temp        cstackBANK0  005A
Lcd_Write_Char@y           cstackBANK0  005B
Lcd_Write_String@a         cstackBANK0  005D
Lcd_Write_String@i         cstackBANK0  0062
_ADCON0                    (abs)        001F
_ADCON1                    (abs)        009F
_ADRESH                    (abs)        001E
_ADRESL                    (abs)        009E
_BRGH                      (abs)        04C2
_CNT                       bssBANK0     004A
_CREN                      (abs)        00C4
_GO_nDONE                  (abs)        00FA
_Gpsdata                   bssCOMMON    007C
_INTCON                    (abs)        000B
_ISR                       text12       0029
_Lcd_Clear                 text9        0696
_Lcd_Cmd                   text10       0620
_Lcd_Init                  text8        0499
_Lcd_Port                  text11       066F
_Lcd_Set_Cursor            text7        04FA
_Lcd_Write_Char            text6        058D
_Lcd_Write_String          text5        054C
_OERR                      (abs)        00C1
_OPTION_REG                (abs)        0081
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_RB0                       (abs)        0030
_RB1                       (abs)        0031
_RB2                       (abs)        0032
_RB3                       (abs)        0033
_RB7                       (abs)        0037
_RCIE                      (abs)        0465
_RCIF                      (abs)        0065
_RCREG                     (abs)        001A
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_SPBRG                     (abs)        0099
_SPEN                      (abs)        00C7
_SYNC                      (abs)        04C4
_T1CONbits                 (abs)        0010
_TMR0                      (abs)        0001
_TMR1H                     (abs)        000F
_TMR1IF                    (abs)        0060
_TMR1L                     (abs)        000E
_TRISA                     (abs)        0085
_TRISB0                    (abs)        0430
_TRISB1                    (abs)        0431
_TRISB2                    (abs)        0432
_TRISB3                    (abs)        0433
_TRISB6                    (abs)        0436
_TRISB7                    (abs)        0437
_TRISC6                    (abs)        043E
_TRISC7                    (abs)        043F
_TRISD                     (abs)        0088
_TXEN                      (abs)        04C5
_TXIF                      (abs)        0064
_TXREG                     (abs)        0019
__CFG_BOREN$OFF            (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FOSC$HS              (abs)        0000
__CFG_LVP$OFF              (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssBANK1                bssBANK1     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0029
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0015
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         0012
__Hintentry                intentry     0012
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2008
__Hspace_1                 (abs)        00C8
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssBANK1                bssBANK1     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0015
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0012
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         0012
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2008
__S1                       (abs)        00C8
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
__end_of_ISR               text12       024B
__end_of_Lcd_Clear         text9        06A1
__end_of_Lcd_Cmd           text10       063C
__end_of_Lcd_Init          text8        04FA
__end_of_Lcd_Port          text11       0687
__end_of_Lcd_Set_Cursor    text7        054C
__end_of_Lcd_Write_Char    text6        05CA
__end_of_Lcd_Write_String  text5        058D
__end_of__initialization   cinit        0025
__end_of__stringtab        strings      0410
__end_of_adc_init          text4        06B4
__end_of_adc_read          text3        05FD
__end_of_main              maintext     03F3
__end_of_timer1_init       text2        0696
__end_of_uart_init         text1        066F
__end_of_uart_rx           text15       06AB
__end_of_uart_txc          text14       0657
__end_of_uart_txs          text13       0620
__initialization           cinit        0015
__pbssBANK0                bssBANK0     0020
__pbssBANK1                bssBANK1     00A0
__pbssCOMMON               bssCOMMON    007C
__pcstackBANK0             cstackBANK0  0058
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     024B
__pstrings                 strings      0400
__ptext1                   text1        0657
__ptext10                  text10       0620
__ptext11                  text11       066F
__ptext12                  text12       0029
__ptext13                  text13       05FD
__ptext14                  text14       063C
__ptext15                  text15       06A1
__ptext2                   text2        0687
__ptext3                   text3        05CA
__ptext4                   text4        06AB
__ptext5                   text5        054C
__ptext6                   text6        058D
__ptext7                   text7        04FA
__ptext8                   text8        0499
__ptext9                   text9        0696
__size_of_ISR              (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_adc_init         (abs)        0000
__size_of_adc_read         (abs)        0000
__size_of_main             (abs)        0000
__size_of_timer1_init      (abs)        0000
__size_of_uart_init        (abs)        0000
__size_of_uart_rx          (abs)        0000
__size_of_uart_txc         (abs)        0000
__size_of_uart_txs         (abs)        0000
__stringbase               strings      040F
__stringtab                strings      0400
_adc_init                  text4        06AB
_adc_read                  text3        05CA
_com_cnt                   bssBANK0     0038
_count                     bssBANK0     004C
_finish                    bssBANK0     0042
_flg                       bssBANK0     003A
_lat                       bssBANK1     00B4
_lat_cnt                   bssBANK0     003E
_lat_dir                   bssBANK0     0053
_lat_dir_cnt               bssBANK0     0036
_log_cnt                   bssBANK0     003C
_lon                       bssBANK1     00A0
_lon_dir                   bssBANK0     004E
_lon_dir_cnt               bssBANK0     0034
_main                      maintext     024B
_pos_cnt                   bssBANK0     0040
_timer1_init               text2        0687
_uart_init                 text1        0657
_uart_rx                   text15       06A1
_uart_txc                  text14       063C
_uart_txs                  text13       05FD
_x                         bssBANK0     0048
_y                         bssBANK0     0046
_z                         bssBANK0     0044
adc_read@channel           cstackBANK0  005C
btemp                      (abs)        007E
clear_ram0                 clrtext      06B4
end_of_initialization      cinit        0025
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0012
start_initialization       cinit        0015
uart_txc@ch                cstackCOMMON 0070
uart_txc@i                 cstackCOMMON 0071
uart_txs@st                cstackCOMMON 0073
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 96 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_adc_init
		_adc_read
		_timer1_init
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 38 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _timer1_init *****************
 Defined at:
		line 85 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _adc_read *****************
 Defined at:
		line 74 in file "BORDER.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _adc_init *****************
 Defined at:
		line 70 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 92 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
  a               2    5[BANK0 ] PTR unsigned char 
		 -> lon_dir(5), lon(20), STR_8(5), lat_dir(5), 
		 -> lat(20), STR_7(5), STR_6(17), STR_5(17), 
		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 Auto vars:     Size  Location     Type
  i               2   10[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 76 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[BANK0 ] unsigned char 
  y               1    3[BANK0 ] unsigned char 
  temp            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[BANK0 ] unsigned char 
  temp            1   10[BANK0 ] unsigned char 
  y               1    9[BANK0 ] unsigned char 
  z               1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 58 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  112[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 174 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          7       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_uart_rx
		_uart_txc
		_uart_txs
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _uart_txs *****************
 Defined at:
		line 57 in file "BORDER.c"
 Parameters:    Size  Location     Type
  st              2    3[COMMON] PTR unsigned char 
		 -> STR_11(5), STR_10(5), STR_9(15), lon_dir(5), 
		 -> lon(20), lat_dir(5), lat(20), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_uart_txc
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _uart_txc *****************
 Defined at:
		line 50 in file "BORDER.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[COMMON] unsigned char 
  i               2    1[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_txs
		_ISR
 This function uses a non-reentrant model


 *************** function _uart_rx *****************
 Defined at:
		line 61 in file "BORDER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
BORDER.c
		_uart_txc      		CODE           	063C	0000	28
		_uart_txs      		CODE           	05FD	0000	36
		_ISR           		CODE           	0029	0000	547
		_main          		CODE           	024B	0000	425
		_uart_rx       		CODE           	06A1	0000	11
		_uart_init     		CODE           	0657	0000	25
		_adc_read      		CODE           	05CA	0000	52
		_timer1_init   		CODE           	0687	0000	16
		_adc_init      		CODE           	06AB	0000	10

BORDER.c estimated size: 1150

C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h
		_Lcd_Write_String		CODE           	054C	0000	66
		_Lcd_Init      		CODE           	0499	0000	98
		_Lcd_Write_Char		CODE           	058D	0000	62
		_Lcd_Cmd       		CODE           	0620	0000	29
		_Lcd_Set_Cursor		CODE           	04FA	0000	83
		_Lcd_Clear     		CODE           	0696	0000	12
		_Lcd_Port      		CODE           	066F	0000	25

C:\Program Files (x86)\Microchip\xc8\v1.42\include\lcd.h estimated size: 375

shared
		__stringtab    		STRING         	0400	0000	17
		__initialization		CODE           	0015	0000	17

shared estimated size: 34

